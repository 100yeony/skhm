{"remainingRequest":"/home/skhm/web_client/client_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/skhm/web_client/client_test/src/components/WLsetting.vue?vue&type=style&index=0&id=16d1070a&lang=css&scoped=true&","dependencies":[{"path":"/home/skhm/web_client/client_test/src/components/WLsetting.vue","mtime":1563180614951},{"path":"/home/skhm/web_client/client_test/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntable.v-table tbody tr td {\n  font-size: 16px;\n}\ntable.v-table th {\n\n  font-size: 16px;\n}\n.hover {\n  cursor  : pointer;\n}\n\n",{"version":3,"sources":["WLsetting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsOA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"WLsetting.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"html\">\n    <v-container fluid align-start ma-2 pa-5>\n      <v-layout row wrap justify-space-around fill-height>\n        <!--워크로드 목록-->\n        <v-flex xs12 sm7 md7 xl7>\n          <v-toolbar flat color=\"grey lighten-2\">\n            <v-toolbar-title>\n              <h3>Workloads List</h3>\n            </v-toolbar-title>\n            <v-spacer></v-spacer>\n            <!--워크로드 생성 dialog-->\n            <v-tooltip top>\n              <v-btn color=\"#34495E\" dark round class=\"mb-2\" fab small @click=\"onDialog\" slot=\"activator\">\n                <v-icon>add</v-icon>\n                </v-btn>\n              <span>워크로드 생성</span>\n            </v-tooltip>\n\n            <v-dialog v-model=\"dialog\" max-width=\"500px\" persistent>\n              <WLsettingBox ref=\"tab_dlg\" :settingBoxSeen=\"true\" :isDialog=\"true\" v-on:emitCancel=\"onCancel\" v-on:emitSave=\"onSave\"></WLsettingBox>\n            </v-dialog>\n            <!--/워크로드 생성 dialog-->\n          </v-toolbar>\n\n          <!--워크로드 목록 데이터 테이블-->\n          <v-data-table v-model=\"selected\"\n                        :headers=\"headers\"\n                        :items=\"getWLfilesFilter\"\n                        :custom-sort=\"customSort\"\n                        :must-sort=\"true\"\n                        class=\"elevation-1\"\n                        :pagination.sync=\"pagination\"\n                      >  <!--items와 computed에서 정의한 함수를 바인딩하여 WLfiles[]를 표현-->\n            <template v-slot:items=\"props\">\n                <tr :active=\"props.item.isActive\" :key=\"props.item.w_id\">\n                  <td @click=\"onSelect(props.item.w_id)\" class=\"text-xs-center hover\">{{ props.item.w_name }}</td>\n                  <td @click=\"onSelect(props.item.w_id)\" class=\"text-xs-center hover\">{{ props.item.w_read+\"/\"+props.item.w_update+\"/\"+props.item.w_insert+\"/\"+props.item.w_scan +\"/\"+props.item.w_readmodifywrite }}</td>\n                  <td @click=\"onSelect(props.item.w_id)\" class=\"text-xs-center hover\">{{ props.item.w_c_timestamp}}</td>\n                  <td @click=\"onSelect(props.item.w_id)\" class=\"text-xs-center hover\">{{ props.item.w_freq_count}}</td>\n                  <td class=\"text-xs-center\">\n                    <v-layout align-center justify-center row wrap>\n                      <v-flex xs4>\n                        <v-tooltip top>\n                          <v-icon slot=\"activator\" @click=\"copy(props.item.w_id)\" color=\"#848484\">file_copy</v-icon>\n                          <span>Copy</span>\n                        </v-tooltip>\n                      </v-flex>\n                      <v-flex xs4>\n                        <v-tooltip top>\n                          <v-icon slot=\"activator\" @click=\"deleteWorkload(props.item.w_id)\" color=\"#848484\">delete</v-icon>\n                          <span>Delete</span>\n                        </v-tooltip>\n                      </v-flex>\n                      <v-spacer></v-spacer>\n                    </v-layout>\n                  </td>\n                </tr>\n              </template>\n          </v-data-table>\n          <!--/데이터 테이블-->\n        </v-flex>\n\n        <!--워크로드 설정-->\n        <v-flex xs12 sm4 md4 xl4>\n          <WLsettingBox ref=\"tab_right\" :settingBoxSeen=\"settingBoxSeen\" :isDialog=\"false\" v-on:emitCancel=\"onCancel\" v-on:emitSave=\"onSave\"></WLsettingBox>\n          <!--WLsettingBox.vue -->\n        </v-flex>\n        <!--/워크로드 설정-->\n\n      </v-layout>\n    </v-container>\n</template>\n\n\n<script>\n\n  import WLsettingBox from './WLsettingBox.vue'\n\n  export default {\n    components: {\n      WLsettingBox\n    },\n    data: () => ({\n      settingBoxSeen: false,\n      selected: [],\n      show: false,\n      dialog: false,\n      headers: [\n        { text: '파일명', align: 'center', sortable: false, value: 'name', width: '20%' },\n        { text: '연산비율(R/U/I/S/RMW)', align: 'center', sortable: false, value: 'operationRatio', width: '10%' },\n        { text: '생성일', align: 'center', value: 'date', width: '20%' },\n        { text: '사용빈도', align: 'center', value: 'frequency', width: '5%' },\n        { text: '', align: 'center', sortable: false, value: 'name', width: '20%' }\n      ],\n      editedIndex: -1,\n      pagination : {\n        sortBy : 'date',\n      },\n    }),\n\n\n      created() {\n      this.$store.dispatch('getWLfiles') //(1). store에 정의된 함수가 실행되면서 서버에서 워크로드 데이터 가져옴.\n      this.pagination.descending = true\n    },\n\n\n    computed: {\n      getWLfilesFilter() {\n        //(2). WLfiles[]의 state을 가져와서 워크로드 테이블과 연결하는 함수\n        // console.log(this.$store.state.WLfiles);\n        return this.$store.state.WLfilesFilter\n\n      }\n    },\n    methods: {\n      showLoading(){\n          this.$store.commit('setIsLoading', true)\n      },\n      clearSelect(){\n        let self = this\n        this.settingBoxSeen = false\n        this.$store.commit('setIsActive', -1)\n\n        setTimeout(function() {\n          self.$store.commit('setSelectedWorkload', {})\n        },200)\n\n      },\n      customSort(items, index, isDescending) {\n        items.sort((a, b) => {\n          if (index === 'w_freq_count') {\n            if (isDescending) {\n              return b.w_freq_count - a.w_freq_count\n            } else {\n              return a.w_freq_count - b.w_freq_count\n            }\n          } else {\n            if (isDescending) {\n              return new Date(b.w_c_timestamp) - new Date(a.w_c_timestamp)\n            } else {\n              return new Date(a.w_c_timestamp) - new Date(b.w_c_timestamp)\n            }\n          }\n        })\n        return items\n      },\n      deleteWorkload(wId) {\n\n        if(confirm('정말로 삭제하시겠습니까?(삭제된 파일은 복원할 수 없습니다.)')){\n            // console.log(wId)\n            if(this.$store.state.selectedWorkload.w_id == wId){\n              this.settingBoxSeen = false\n            }\n            this.showLoading()\n            this.$store.dispatch('deleteWorkload', wId)\n\n        }\n      },\n\n      copy(wId) {\n        //flag 2 = copy\n        this.showLoading()\n        this.$store.dispatch('modifyWorkload', { w_id: wId, modifyFlag : 2})\n      },\n\n      onSelect(wId) {\n        //테이블 row 클릭 시 배경색깔 변하는 함수\n        //보이게 하는거\n\n        if(this.$store.state.selectedWorkload.w_id == wId){\n          this.$refs.tab_right.onSelect()\n          return\n        }\n        this.showLoading()\n        if (this.settingBoxSeen)\n          this.settingBoxSeen = false\n\n        //색깔 바꾸는거\n        this.$store.commit('setIsActive', wId)\n        //[1]. selected_WLfil을 서버에서 가져오는 함수 정의\n        this.$store.dispatch('getSelectedWorkload', wId).then((res)=>{\n          if(res.status == 200){\n            this.settingBoxSeen = true\n            this.$refs.tab_right.onSelect()\n          }\n          // console.log(this.$store.state.selectedWorkload);\n        })\n      },\n\n      //워크로드 생성 dialog 켜짐\n      onDialog() {\n        // console.log(\"copy\");\n        this.$store.commit('setInsertWorkload')\n        if(this.settingBoxSeen)\n          this.clearSelect()\n        this.dialog = true\n        this.$refs.tab_dlg.onSelect()\n\n      },\n\n      //워크로드 생성 dialog cancel버튼\n      onCancel(isDialog) {\n        if (isDialog) this.dialog = false\n        else          this.clearSelect()\n      },\n\n      onSave(isDialog){\n          //insert\n          if(isDialog){\n            this.showLoading()\n            //0 : insert\n            this.$store.dispatch('modifyWorkload', {modifyFlag : 0}).then((res)=>{\n              if(res.status == 200){\n                this.dialog = false\n              }\n            })\n          }else{  //1: update\n            this.$store.dispatch('modifyWorkload', {modifyFlag : 1})\n            // this.$store.commit('setWLdatasize', datasize)\n          }\n\n      }\n    } //method 닫히는 곳\n  } //export default 닫히는 곳\n\n</script>\n\n<style lang=\"css\" scoped>\n\n  table.v-table tbody tr td {\n    font-size: 16px;\n  }\n  table.v-table th {\n\n    font-size: 16px;\n  }\n  .hover {\n    cursor  : pointer;\n  }\n\n</style>\n"]}]}
{"remainingRequest":"/home/skhm/web_client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/skhm/web_client/src/components/BM_result.vue?vue&type=template&id=dcca0b9e&scoped=true&lang=html&","dependencies":[{"path":"/home/skhm/web_client/src/components/BM_result.vue","mtime":1563180614951},{"path":"/home/skhm/web_client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/skhm/web_client/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/skhm/web_client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n<v-flex xs12 class=\"tabItemCard\">\n  <v-card flat>\n    <v-layout justify-center row wrap>\n      <!--기간조회-->\n      <v-flex xs12 sm11 md11 xl11 mt-4>\n        <v-card flat class=\"daterange--default\">\n          <v-toolbar flat color=\"white\">\n            <v-toolbar-title>\n              <b>기간 조회&nbsp;</b> &nbsp;From\n              <v-chip close @input=\"removeChip(0)\">{{ chipRange[0] }}</v-chip>\n              To\n              <v-chip close @input=\"removeChip(1)\">{{ chipRange[1] }}</v-chip>\n            </v-toolbar-title>\n            <!-- <v-spacer></v-spacer> -->\n\n              <v-tooltip top>\n                <v-btn icon  slot=\"activator\">\n                  <v-icon  @click=\"clickSearchBtn()\">{{ showDatePicker ? 'done' : 'search'}}</v-icon>\n                </v-btn>\n                <span>click !</span>\n              </v-tooltip>\n\n            <v-btn @click=\"clickSearchAll()\" dark color=\"blue lighten-2\">전체 기간</v-btn>\n          </v-toolbar>\n          <!--DatePicker-->\n          <v-slide-y-transition >\n            <v-flex xs12 v-show=\"showDatePicker\">\n              <v-card-text>\n                <v-daterange :options=\"dateRangeOptions\" @input=\"onDateRangeChange\" />\n              </v-card-text>\n            </v-flex>\n\n          </v-slide-y-transition>\n          <!--/DatePicker-->\n        </v-card>\n      </v-flex>\n      <!--/기간조회-->\n\n      <!--결과 테이블 -->\n      <v-flex xs12 sm11 md11 xl11 mb-5>\n        <v-toolbar flat color=\"grey lighten-2\">\n          <v-toolbar-title>\n            <v-flex xs5>\n              <h4 class=\"headline\">벤치마킹 결과 &nbsp;&nbsp;</h4>\n            </v-flex>\n          </v-toolbar-title>\n          <!-- 벤치마킹 수행상태 -->\n          <v-btn-toggle v-model=\"toggle\" mandatory>\n            <v-btn @click=\"btnToggle(5)\" flat color=\"blue darken-4\">전체</v-btn>\n            <v-btn @click=\"btnToggle(0)\" flat color=\"blue darken-4\">수행준비</v-btn>\n            <v-btn @click=\"btnToggle(1)\" flat color=\"blue darken-4\">수행중</v-btn>\n            <v-btn @click=\"btnToggle(2)\" flat color=\"blue darken-4\">수행취소</v-btn>\n            <v-btn @click=\"btnToggle(3)\" flat color=\"blue darken-4\">수행완료</v-btn>\n          </v-btn-toggle>\n          <v-spacer></v-spacer>\n          <v-tooltip top>\n            <v-btn icon  slot=\"activator\">\n              <v-icon  @click=\"reload()\">cached</v-icon>\n            </v-btn>\n            <span>새로 고침</span>\n          </v-tooltip>\n          <!-- /벤치마킹 수행상태 -->\n        </v-toolbar>\n\n        <!--벤치마킹 결과 테이블-->\n        <v-data-table :headers=\"BMheaders\"\n                      :items=\"getBMresults\"\n                      :custom-sort=\"customSort\"\n                      item-key=\"r_id\"\n                      class=\"elevation-1\"\n                      :must-sort=\"true\"\n                      :pagination.sync=\"pagination\"\n                      expand>\n          <template v-slot:items=\"props\">\n              <tr>\n                <td class=\"text-xs-center\">{{ props.item.flagStr }}</td>\n                <td class=\"text-xs-center\">{{ props.item.r_id }}</td>\n                <td class=\"text-xs-center\">{{ props.item.r_name }}</td>\n                <td class=\"text-xs-center\">{{ props.item.r_c_timestamp }}</td>\n                <td class=\"text-xs-center\">{{ props.item.r_s_timestamp }}</td>\n                <td class=\"text-xs-center\">{{ props.item.r_e_timestamp }}</td>\n                <td class=\"text-xs-center\">{{ props.item.totalTimestamp }}</td>\n                <td class=\"text-xs-center\">\n                  <v-btn\n                    v-if='props.item.graph !==undefined'\n                    @click=\"openNewTab(props.item.graph, props.item.r_name, props.item.r_id)\"\n                    icon>\n                    <!-- props.item.graph는 store actions getBMresults에 정의된 value.graph를 의미 : error또는 equalizer -->\n                    <v-icon color=\"blue\">{{ props.item.graph }}</v-icon>\n                  </v-btn>\n                </td>\n                <td class=\"text-xs-center\">\n                  <v-menu right top>\n                    <v-btn icon slot=\"activator\"><v-icon>more_vert</v-icon></v-btn>\n                    <v-list dense >\n                      <v-list-tile\n                        @click=\"openNewTab(0, props.item.r_name, props.item.r_id)\">\n                        <v-list-tile-title>벤치마킹 정보 보기</v-list-tile-title>\n                      </v-list-tile>\n                      <v-divider></v-divider>\n                      <v-list-tile >\n                        <v-list-tile-title>수행 취소</v-list-tile-title>\n                      </v-list-tile>\n                      <v-divider></v-divider>\n                      <v-list-tile >\n                        <v-list-tile-title>재설정</v-list-tile-title>\n                      </v-list-tile>\n                      <v-divider></v-divider>\n                      <v-list-tile >\n                        <v-list-tile-title>재실행</v-list-tile-title>\n                      </v-list-tile>\n                    </v-list>\n                  </v-menu>\n                </td>\n\n                <td class=\"text-xs-center\">\n                <v-btn  icon   @click=\"props.expanded = !props.expanded\">\n                  <v-icon>{{ props.expanded ? 'keyboard_arrow_up' : 'keyboard_arrow_down' }}</v-icon>\n                </v-btn>\n              </td>\n            </tr>\n          </template>\n\n          <!--DB별 벤치마킹 정보 테이블-->\n          <template v-slot:expand=\"props\">\n            <v-flex xs12 v-for=\"db in props.item.relation\">\n             <v-card flat color=\"grey lighten-3\">\n                <v-layout justify-center row wrap>\n                  <v-flex xs8 ma-3>\n                    <v-toolbar flat dense color=\"rgb(216, 220, 236)\" v-for=\"dbc in db.Dbconfigs\">\n                      <h2 class=\"title\">\n                        {{ dbc.nc_name }} &nbsp;(ver.{{ dbc.n_version }})\n                      </h2>\n                    </v-toolbar>\n                    <v-data-table\n                    :headers=\"BM_DBheaders\"\n                    :items=\"db.wlconfigs\"\n                    hide-actions\n                    item-key=\"db.nc_id\"\n                    class=\"elevation-1\"\n                    >\n                    <template v-slot:items=\"props\">\n                      <td class=\"text-xs-center\">{{ props.item.w_name}}</td>\n                      <td class=\"text-xs-center\">{{ props.item.prop.operationcount}}</td>\n                    <!-- items와 computed에서 정의한 함수를 바인딩하여 WLfiles[]를 표현 -->\n                      <td class=\"text-xs-center\">{{ props.item.w_read }}</td>\n                      <td class=\"text-xs-center\">{{ props.item.w_update}}</td>\n                      <td class=\"text-xs-center\">{{ props.item.w_insert }}</td>\n                      <td class=\"text-xs-center\">{{ props.item.w_scan }}</td>\n                      <td class=\"text-xs-center\">{{ props.item.w_readmodifywrite }}</td>\n                    </template>\n\n        </v-data-table>\n      </v-flex>\n    </v-layout>\n  </v-card>\n</v-flex>\n</template>\n<!--/DB별 벤치마킹 정보 테이블-->\n</v-data-table>\n</v-flex>\n<!--/결과 테이블 -->\n</v-layout>\n</v-card>\n</v-flex>\n\n",null]}
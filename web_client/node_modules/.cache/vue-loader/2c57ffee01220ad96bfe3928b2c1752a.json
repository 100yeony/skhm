{"remainingRequest":"/home/skhm/web_client/client_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/skhm/web_client/client_test/src/components/inputs/VSelectWithValidation.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/skhm/web_client/client_test/src/components/inputs/VSelectWithValidation.vue","mtime":1563180614952},{"path":"/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { ValidationProvider } from \"vee-validate\";\n\nexport default {\n  components: {\n    ValidationProvider\n  },\n  props: {\n    rules: {\n      type: [Object, String],\n      default: ''\n    },\n    value: {\n      type: null\n    }\n  },\n  data: () => ({\n    innerValue: ''\n  }),\n  watch: {\n    // Handles internal model changes.\n    innerValue (newVal) {\n      this.$emit('input', newVal);\n    },\n    // Handles external model changes.\n    value (newVal) {\n      this.innerValue = newVal;\n    }\n  },\n  created () {\n    if (this.value) {\n      this.innerValue = this.value;\n    }\n  }\n};\n",{"version":3,"sources":["VSelectWithValidation.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VSelectWithValidation.vue","sourceRoot":"src/components/inputs","sourcesContent":["<template>\n  <ValidationProvider :name=\"$attrs.label\" :rules=\"rules\">\n    <v-select\n      slot-scope=\"{ errors, valid }\"\n      v-model=\"innerValue\"\n      :error-messages=\"errors\"\n      v-bind=\"$attrs\"\n      v-on=\"$listeners\"\n    ></v-select>\n  </ValidationProvider>\n</template>\n\n<script>\nimport { ValidationProvider } from \"vee-validate\";\n\nexport default {\n  components: {\n    ValidationProvider\n  },\n  props: {\n    rules: {\n      type: [Object, String],\n      default: ''\n    },\n    value: {\n      type: null\n    }\n  },\n  data: () => ({\n    innerValue: ''\n  }),\n  watch: {\n    // Handles internal model changes.\n    innerValue (newVal) {\n      this.$emit('input', newVal);\n    },\n    // Handles external model changes.\n    value (newVal) {\n      this.innerValue = newVal;\n    }\n  },\n  created () {\n    if (this.value) {\n      this.innerValue = this.value;\n    }\n  }\n};\n</script>\n"]}]}
{"remainingRequest":"/home/skhm/web_client/node_modules/babel-loader/lib/index.js!/home/skhm/web_client/node_modules/vuetify-loader/lib/loader.js!/home/skhm/web_client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/skhm/web_client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/skhm/web_client/src/components/Execute.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/skhm/web_client/src/components/Execute.vue","mtime":1563180614951},{"path":"/home/skhm/web_client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/skhm/web_client/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/skhm/web_client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport draggable from 'vuedraggable';\nimport testJson from '../assets/test.json';\nimport dgList from './draggable_list.vue';\nimport { ValidationObserver } from 'vee-validate'; // import VTextFieldWithValidation from './inputs/VTextFieldWithValidation'\n\nexport default {\n  data: function data() {\n    return {\n      gr: 'drag_group',\n      db_configs: [],\n      //store.state.db_configsTest\n      wl_configs: [],\n      //store.state.WLfiles\n      DBfilesConfigs: [],\n      dialog: false,\n      treeDialog: false,\n      valid: true,\n      r_name: '',\n      r_window_size: 10,\n      r_threshold: 3000,\n      nameRules: [function (v) {\n        return !!v || 'Name is required';\n      }]\n    };\n  },\n  components: {\n    dgList: dgList,\n    draggable: draggable,\n    ValidationObserver: ValidationObserver\n  },\n  created: function created() {\n    this.$store.dispatch('getDBs'); // let dblists = this.$store.state.db_configsTest //store에 넣어놓은 가데이터 변수에 저장\n    // this.db_configs = { title: 'NoSQL', gr: this.gr, lists: dblists } //화면에 리스트로 표현\n    //\n    // //test.json파일의 benchmarks[]값을 store.state.benchmarks[]에 set함\n    // this.$store.commit('setItems', testJson.benchmarks)\n\n    this.$store.dispatch('getWLfiles'); //\n    // let wllists = this.$store.state.WLfilesFilter\n    // this.wl_configs = { title: 'Workloads', gr: this.gr, lists: wllists }\n    // // console.log(this.$store.state.benchmarks);\n  },\n  computed: {\n    benchmarks: {\n      get: function get() {\n        var dblists = this.$store.state.DBfilesConfigs; //setDBfiles에서 dbconfigs의 파일만이 저장된 DBfilesConfigs를 사용\n\n        this.db_configs = {\n          title: 'NoSQL',\n          gr: this.gr,\n          lists: dblists //화면에 리스트로 표현\n\n        };\n        var wllists = this.$store.state.WLfilesFilter;\n        this.wl_configs = {\n          title: 'Workloads',\n          gr: this.gr,\n          lists: wllists\n        };\n        return this.$store.state.benchmarks;\n      },\n      set: function set(value) {\n        this.$store.commit('setItems', value);\n      }\n    },\n    benchmarkData: function benchmarkData() {\n      return this.$store.state.benchmarks;\n    },\n    getDBfiles: function getDBfiles() {\n      return this.$store.state.DBfiles;\n    },\n    getWLfiles: function getWLfiles() {\n      return this.$store.state.WLfilesFilter;\n    } // setwl() {\n    //   this.wllists = this.$store.state.WLfilesFilter\n    //   this.wl_configs = { title: 'Workloads', gr: this.gr, lists: wllists }\n    // }\n\n  },\n  methods: {\n    close: function close() {\n      this.dialog = false;\n    },\n    save: function save() {\n      //this.$store.dispatch('makeBenchmarks', {\"r_window_size\" : this.r_window_size} )\n      this.dialog = false;\n    },\n    onDialog: function onDialog() {\n      this.dialog = true;\n      this.$refs.tab_dlg.onSelect();\n    },\n    sendBenchmarkData: function sendBenchmarkData() {\n      // console.log(this.r_name)\n      this.$store.dispatch('makeBenchmarks', {\n        r_name: this.r_name,\n        r_window_size: this.r_window_size,\n        r_threshold: this.r_threshold\n      });\n    },\n    reset: function reset() {\n      var self = this;\n      setTimeout(function () {\n        self.$store.dispatch('');\n        location.reload('');\n      }, 20000); //20sec\n    }\n  }\n};",{"version":3,"sources":["Execute.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\n\n  <v-container>\n    <v-layout justify-space-around row wrap>\n      <!--DB목록&워크로드 목록-->\n      <v-flex xs12 sm5 md5 xl5>\n        <!--DB목록-->\n\n        <v-flex xs12>\n          <dgList :conf=\"db_configs\"></dgList>\n        </v-flex>\n        <!--/DB목록-->\n        <v-flex xs12>\n          &nbsp;\n        </v-flex>\n        <!--워크로드 목록-->\n\n        <v-flex xs12>\n          <dgList :conf=\"wl_configs\"></dgList>\n        </v-flex>\n        <!--/워크로드 목록-->\n      </v-flex>\n      <!--/DB목록&워크로드 목록-->\n\n      <!--오른쪽 Benchmarks 매칭 부분-->\n      <v-flex xs12 sm5 md5 xl5>\n        <ValidationObserver ref=\"obs\">\n          <v-card :value=\"benchmarkData\">\n            <v-form ref=\"form\" v-model=\"valid\">\n              <v-toolbar flat color=\"rgb(242, 120, 19)\">\n                <v-toolbar-title>\n                  <h3>Benchmarks</h3>\n                </v-toolbar-title>\n                <v-spacer></v-spacer>\n                <!-- 추후에 개발완료해서 다시 살릴 것 -->\n                <!--TreeView-->\n                <!-- <v-tooltip top>\n                              <v-icon slot=\"activator\" @click=\"treeDialog=true\" color=\"#34495E\">check_box</v-icon>\n                              <span>CheckBox</span>\n                            </v-tooltip>\n                            <v-dialog v-model=\"treeDialog\" max-width=\"700px\">\n                              <v-card>\n                                <v-card-title>\n                                  <v-toolbar card color=\"white\">\n                                    <h1>Benchmarks Checkbox</h1>\n                                  </v-toolbar>\n                                  <v-card-text>\n                                    <v-treeview v-model=\"tree\"\n                                                :items=\"items\"\n                                                activatable\n                                                active-class=\"grey lighten-4 indigo--text\"\n                                                selected-color=\"indigo\"\n                                                open-on-click\n                                                selectable\n                                                expand-icon=\"mdi-chevron-down\"\n                                                on-icon=\"mdi-bookmark\"\n                                                off-icon=\"mdi-bookmark-outline\"\n                                                indeterminate-icon=\"mdi-bookmark-minus\">\n                                      <div>\n                                        Selected items: {{ selectedItems }}\n                                      </div>\n                                    </v-treeview>\n                                  </v-card-text>\n                                </v-card-title>\n                                <v-card-actions>\n                                  <v-spacer></v-spacer>\n                                  <v-btn color=\"red\" flat @click=\"close\">close</v-btn>\n                                  <v-btn color=\"blue darken-1\" flat @click=\"save\">Save</v-btn>\n                                </v-card-actions>\n                              </v-card>\n                            </v-dialog> -->\n                <!--/TreeView-->\n\n                <!--벤치마킹 고급 설정 dialog-->\n\n                <v-tooltip top>\n                  <v-btn class=\"mb-2\" icon slot=\"activator\" @click=\"onDialog\">\n                    <v-icon>settings</v-icon>\n                  </v-btn>\n                  <span>IO Graph setting</span>\n                </v-tooltip>\n                <v-dialog v-model=\"dialog\" max-width=\"400px\">\n                  <v-card>\n                    <v-card-title>\n                      <span class=\"headline\">IO Latency Graph 고급 설정</span>\n                    </v-card-title>\n                    <v-card-text>\n                      <v-container grid-list-md>\n                        <v-layout wrap>\n                          <v-flex xs12>\n                            <v-text-field v-model=\"r_window_size\" label=\"Analysis Window Size(sec)\" mask=\"#################\"></v-text-field>\n                          </v-flex>\n                          <v-flex xs12>\n                            <v-text-field v-model=\"r_threshold\" label=\"Threshold\"></v-text-field>\n                          </v-flex>\n\n                        </v-layout>\n                      </v-container>\n                    </v-card-text>\n                    <v-card-actions>\n                      <v-spacer></v-spacer>\n                      <v-btn color=\"red\" flat @click=\"close\">close</v-btn>\n                      <v-btn color=\"blue darken-1\" flat @click=\"save\">Save</v-btn>\n                    </v-card-actions>\n                  </v-card>\n                </v-dialog>\n                <!--/벤치마킹 고급 설정 dialog-->\n              </v-toolbar>\n\n              <!-- 벤치마킹 이름 입력 부분 -->\n              <v-layout justify-center>\n                <v-flex xs11 sm11 md11 xl11>\n                  <v-card flat color=\"white\">\n                    <v-flex xs8 sm8 md8 xl8 ma-4>\n                      <v-text-field :counter=\"20\" v-model=\"r_name\" label=\"*벤치마킹 이름(필수)\" :rules=\"nameRules\" required></v-text-field>\n                    </v-flex>\n\n                  </v-card>\n                </v-flex>\n\n                <v-tooltip top>\n                  <v-btn icon slot=\"activator\">\n                    <v-icon @click=\"reset()\">cached</v-icon>\n                  </v-btn>\n                  <span>초기화</span>\n                </v-tooltip>\n\n              </v-layout>\n              <!-- /벤치마킹 이름 입력 부분 -->\n\n              <v-flex ma-1 pa-3>\n                <v-card flat color=\"rgb(255, 214, 180)\">\n                  <v-container id=\"scroll-target\"\n                               style=\"max-height: 750px\"\n                               class=\"scroll-y\">\n                    <v-layout v-scroll:#scroll-target=\"onScroll\" column style=\"height: 100%\">\n                        <v-subheader>※ 왼쪽의 NoSQL, Workloads 파일을 이곳에 드래그하여 NoSQL별 Workloads를 매칭</v-subheader>\n                      <draggable :list=\"benchmarks\" :group=\"{name : gr}\" style=\"min-height: 10px\">\n                      </draggable>\n                      <!-- draggable로 벤치마크 파일 만드는 부분 -->\n\n                      <v-flex class=\" pa-3 ma-1\">\n                        <template v-for=\"item in benchmarks\">\n                          <!-- <v-list :key=\"item.n_id\" two-line> -->\n                                    <v-list two-line>\n                                        <v-subheader>\n                                          {{ item.drg_name }}\n                                        </v-subheader>\n                                        <draggable :list=\"item.w_ids\" :group=\"{name : gr}\" style=\"min-height: 10px\">\n                                          <!-- <draggable :list=\"item.benchmarks.benchmarks.w_id\" :group=\"{name : gr}\" style=\"min-height: 10px\"> -->\n\n\n                                          <!-- <template v-for=\"(wl, j) in item.workloads\">\n                                            <v-list-tile :key=\"j\" avatar class='handle'> -->\n\n\n                                          <template v-for=\"(wl, j) in item.w_ids\">\n                                            <v-list-tile :key=\"j\" avatar class='handle'>\n                                              <v-list-tile-avatar>\n                                                <v-icon>folder</v-icon>\n                                              </v-list-tile-avatar>\n                                              <v-list-tile-content>\n                                                <v-list-tile-title v-html=\"wl.drg_name\"></v-list-tile-title>\n                                                <v-list-tile-sub-title v-html=\"wl.totlOperation\"></v-list-tile-sub-title>\n                                              </v-list-tile-content>\n                                            </v-list-tile>\n                                          </template>\n\n                        </draggable>\n                        </v-list>\n                        <v-divider :key=\"item.key\"></v-divider>\n                        </template>\n                      </v-flex>\n                    </v-layout>\n                  </v-container>\n                  <!-- draggable로 벤치마크 파일 만드는 부분 -->\n                </v-card>\n              </v-flex>\n\n            </v-form>\n          </v-card>\n        </ValidationObserver>\n        <!--실행버튼-->\n        <v-layout justify-end>\n          <v-btn color=\"red\" round @click=\"sendBenchmarkData()\" :disabled=\"!valid\">\n            <h3>실행</h3>\n          </v-btn>\n        </v-layout>\n        <!--/실행버튼-->\n      </v-flex>\n      <!--/오른쪽 Benchmarks 매칭 부분-->\n\n    </v-layout>\n  </v-container>\n\n</template>\n\n<script>\n\n  import draggable from 'vuedraggable'\n  import testJson from '../assets/test.json'\n  import dgList from './draggable_list.vue'\n  import { ValidationObserver } from 'vee-validate'\n  // import VTextFieldWithValidation from './inputs/VTextFieldWithValidation'\n\n  export default {\n    data: () => ({\n      gr: 'drag_group',\n      db_configs: [], //store.state.db_configsTest\n      wl_configs: [], //store.state.WLfiles\n      DBfilesConfigs: [],\n      dialog: false,\n      treeDialog: false,\n      valid: true,\n      r_name: '',\n      r_window_size: 10,\n      r_threshold: 3000,\n      nameRules: [v => !!v || 'Name is required']\n    }),\n\n    components: {\n      dgList,\n      draggable,\n      ValidationObserver\n    },\n\n    created() {\n      this.$store.dispatch('getDBs')\n\n      // let dblists = this.$store.state.db_configsTest //store에 넣어놓은 가데이터 변수에 저장\n      // this.db_configs = { title: 'NoSQL', gr: this.gr, lists: dblists } //화면에 리스트로 표현\n      //\n      // //test.json파일의 benchmarks[]값을 store.state.benchmarks[]에 set함\n      // this.$store.commit('setItems', testJson.benchmarks)\n\n      this.$store.dispatch('getWLfiles')\n\n      //\n      // let wllists = this.$store.state.WLfilesFilter\n      // this.wl_configs = { title: 'Workloads', gr: this.gr, lists: wllists }\n      // // console.log(this.$store.state.benchmarks);\n    },\n\n    computed: {\n      benchmarks: {\n        get() {\n          let dblists = this.$store.state.DBfilesConfigs //setDBfiles에서 dbconfigs의 파일만이 저장된 DBfilesConfigs를 사용\n          this.db_configs = { title: 'NoSQL', gr: this.gr, lists: dblists } //화면에 리스트로 표현\n\n          let wllists = this.$store.state.WLfilesFilter\n          this.wl_configs = { title: 'Workloads', gr: this.gr, lists: wllists }\n\n          return this.$store.state.benchmarks\n        },\n\n        set(value) {\n          this.$store.commit('setItems', value)\n        }\n      },\n\n      benchmarkData() {\n        return this.$store.state.benchmarks\n      },\n\n      getDBfiles() {\n        return this.$store.state.DBfiles\n      },\n\n      getWLfiles() {\n        return this.$store.state.WLfilesFilter\n      }\n\n      // setwl() {\n      //   this.wllists = this.$store.state.WLfilesFilter\n      //   this.wl_configs = { title: 'Workloads', gr: this.gr, lists: wllists }\n      // }\n    },\n\n    methods: {\n      close() {\n        this.dialog = false\n      },\n\n      save() {\n        //this.$store.dispatch('makeBenchmarks', {\"r_window_size\" : this.r_window_size} )\n        this.dialog = false\n      },\n\n      onDialog() {\n        this.dialog = true\n        this.$refs.tab_dlg.onSelect()\n      },\n\n      sendBenchmarkData() {\n        // console.log(this.r_name)\n        this.$store.dispatch('makeBenchmarks', {\n          r_name: this.r_name,\n          r_window_size: this.r_window_size,\n          r_threshold: this.r_threshold\n        })\n      },\n\n      reset() {\n        let self = this\n        setTimeout(function() {\n          self.$store.dispatch('')\n          location.reload('')\n        }, 20000) //20sec\n      }\n    }\n  }\n\n</script>\n\n<style lang=\"css\" scoped>\n\n  .hover {\n    cursor: pointer;\n  }\n  h3 {\n    color: rgb(255, 255, 255);\n  }\n\n</style>\n"],"sourceRoot":"src/components"}]}
{"remainingRequest":"/home/skhm/web_client/client_test/node_modules/babel-loader/lib/index.js!/home/skhm/web_client/client_test/node_modules/vuetify-loader/lib/loader.js!/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/skhm/web_client/client_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/skhm/web_client/client_test/src/components/BM_result.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/skhm/web_client/client_test/src/components/BM_result.vue","mtime":1563180614951},{"path":"/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport _Object$assign from \"/home/skhm/web_client/client_test/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport 'vuetify-daterange-picker/dist/vuetify-daterange-picker.css';\nimport { format, subDays } from 'date-fns';\nexport default {\n  data: function data() {\n    return {\n      pagination: {\n        sortBy: 'create'\n      },\n      toggle: 0,\n      chip: [],\n      dates: ['2018-09-15', '2018-09-20'],\n      menu1: false,\n      chipRange: [],\n      range: [],\n      dateRangeOptions: {\n        startDate: format(subDays(new Date(), 30), 'YYYY-MM-DD'),\n        endDate: format(new Date(), 'YYYY-MM-DD'),\n        format: 'YYYY/MM/DD',\n        presets: [{\n          label: 'Today',\n          range: [format(new Date(), 'YYYY-MM-DD'), format(new Date(), 'YYYY-MM-DD')]\n        }, {\n          label: 'Yesterday',\n          range: [format(subDays(new Date(), 1), 'YYYY-MM-DD'), format(new Date(), 'YYYY-MM-DD')]\n        }, {\n          label: 'Last 30 Days',\n          range: [format(subDays(new Date(), 30), 'YYYY-MM-DD'), format(new Date(), 'YYYY-MM-DD')]\n        }]\n      },\n      menu: false,\n      modal: false,\n      menu2: false,\n      selected: [],\n      show: false,\n      showBM_DB: false,\n      showDatePicker: false,\n      dialog: false,\n      expand: true,\n      BMheaders: [{\n        text: '상태',\n        sortable: false,\n        align: 'center',\n        width: '7%'\n      }, {\n        text: 'r_id',\n        sortable: false,\n        align: 'center',\n        width: '1%'\n      }, {\n        text: '벤치마킹 이름',\n        sortable: false,\n        align: 'center',\n        width: '15%'\n      }, {\n        text: '생성시간',\n        value: 'create',\n        align: 'center',\n        width: '10%'\n      }, {\n        text: '시작시간',\n        value: 'start',\n        align: 'center',\n        width: '10%'\n      }, {\n        text: '종료시간',\n        value: 'end',\n        align: 'center',\n        width: '10%'\n      }, {\n        text: '총 소요시간',\n        value: 'total',\n        align: 'center',\n        width: '15%'\n      }, {\n        text: '결과',\n        sortable: false,\n        align: 'center',\n        width: '5%'\n      }, {\n        text: '추가 기능',\n        sortable: false,\n        align: 'center',\n        width: '5%'\n      }, {\n        text: '더보기',\n        sortable: false,\n        align: 'center',\n        width: '5%'\n      }],\n      BM: [],\n      BM_DBheaders: [{\n        text: '워크로드 명',\n        sortable: false,\n        value: 'WLname',\n        align: 'center',\n        width: '20%'\n      }, {\n        text: 'Operation Count',\n        value: 'Read',\n        sortable: false,\n        align: 'center',\n        width: '15%'\n      }, {\n        text: 'Read(%)',\n        value: 'Read',\n        sortable: false,\n        align: 'center',\n        width: '10%'\n      }, {\n        text: 'Update(%)',\n        value: 'Update',\n        sortable: false,\n        align: 'center',\n        width: '10%'\n      }, {\n        text: 'Insert(%)',\n        value: 'Insert',\n        sortable: false,\n        align: 'center',\n        width: '10%'\n      }, {\n        text: 'Scan(%)',\n        value: 'Scan',\n        sortable: false,\n        align: 'center',\n        width: '10%'\n      }, {\n        text: 'ReadModifyWrite(%)',\n        value: 'Rmw',\n        sortable: false,\n        align: 'center',\n        width: '10%'\n      }],\n      BM_DB: [] //return End\n\n    };\n  },\n  created: function created() {\n    //최초로 결과 데이터 가져옴\n    this.$store.dispatch('getBMresults');\n    this.$store.commit('setActiveTab', 0);\n    this.range = [this.dateRangeOptions.startDate, this.dateRangeOptions.endDate];\n    this.chipRange = [null, null];\n    this.pagination.descending = true;\n  },\n  computed: {\n    //벤치마킹 결과 가져오기\n    getBMresults: function getBMresults() {\n      // console.log(this.$store.state.BMresults);\n      return this.$store.state.BMresults;\n    },\n    //벤치마킹 DB-WL 정보 가져오기\n    getBM_DB_WLresults: function getBM_DB_WLresults() {\n      return this.$store.state.BM_DB_WL;\n    }\n  },\n  methods: {\n    findAllTime: function findAllTime(items) {\n      var oldest = new Date();\n      var latest = subDays(new Date(), 9999);\n      items.forEach(function (item) {\n        var tempC = new Date(item.r_c_timestamp);\n        if (oldest > tempC) oldest = tempC;\n        if (latest < tempC) latest = tempC;\n      }); // console.log(latest)\n\n      this.chipRange = [format(oldest, 'YYYY-MM-DD'), format(latest, 'YYYY-MM-DD')]; // return format(oldest , 'YYYY-MM-DD')\n    },\n    clickSearchAll: function clickSearchAll() {\n      // this.$store.commit('filterBMFlag', 5)//select all\n      // console.log(this.$refs.btnAll)\n      this.toggle = 0; // this.btnToggle(5)\n\n      this.$store.commit('filterBMDate', [null, null]);\n      var items = this.$store.state.BMresults; // console.log(items)\n\n      this.findAllTime(items); // this.chipRange= [this.findOldestTime(items)]\n    },\n    clickSearchBtn: function clickSearchBtn() {\n      //search\n      if (this.showDatePicker) {\n        // console.log(this.range)\n        this.toggle = 0;\n        this.chipRange = _Object$assign([], this.range);\n        this.$store.commit('filterBMDate', this.range);\n      }\n\n      this.showDatePicker = !this.showDatePicker;\n    },\n    btnToggle: function btnToggle(idx) {\n      // let temp = this.toggle\n      // if(temp == 0)\n      //   temp = 5\n      // else\n      //   temp -= 1\n      this.$store.commit('filterBMFlag', idx); // console.log(evt)\n    },\n    onDateRangeChange: function onDateRangeChange(range) {\n      this.range = range;\n    },\n    customSort: function customSort(items, index, isDescending) {\n      items.sort(function (a, b) {\n        if (index === 'create') {\n          if (isDescending) {\n            return new Date(b.r_c_timestamp) - new Date(a.r_c_timestamp);\n          } else {\n            return new Date(a.r_c_timestamp) - new Date(b.r_c_timestamp);\n          }\n        } else if (index === 'start') {\n          if (isDescending) {\n            return new Date(b.r_s_timestamp) - new Date(a.r_s_timestamp);\n          } else {\n            return new Date(a.r_s_timestamp) - new Date(b.r_s_timestamp);\n          }\n        } else if (index === 'end') {\n          if (isDescending) {\n            return new Date(b.r_e_timestamp) - new Date(a.r_e_timestamp);\n          } else {\n            return new Date(a.r_e_timestamp) - new Date(b.r_e_timestamp);\n          }\n        } else {\n          if (isDescending) {\n            if (b.totalTimestamp > a.totalTimestamp) return -1;else return 1;\n          } else {\n            if (a.totalTimestamp > b.totalTimestamp) return -1;else return 1;\n          }\n        }\n      });\n      return items;\n    },\n    removeChip: function removeChip(idx) {\n      this.toggle = 0;\n      this.chipRange[idx] = null;\n      this.$store.commit('filterBMDate', this.chipRange);\n    },\n    openNewTab: function openNewTab(flag, _rname, _id) {\n      // console.log(_id);\n      var _comp = null;\n      var _name = null;\n      var _type = null;\n\n      if (flag != 0) {\n        if (flag === 'equalizer') flag = 1;else flag = 2;\n      } // console.log(\"click\" + flag)\n\n\n      switch (flag) {\n        case 0:\n          //\n          _comp = 'BM_detail';\n          _name = _rname + '의 정보';\n          _type = 'detail';\n          break;\n\n        case 1:\n          _comp = 'BM_graph';\n          _name = _rname + '의 결과';\n          _type = 'graph';\n          break;\n\n        case 2:\n          _comp = 'BM_error';\n          _name = _rname + '의 에러 정보';\n          _type = 'error';\n          break;\n      }\n\n      var newTab = {\n        title: _name,\n        id: this.$store.state.tabs.length,\n        type: _type,\n        r_id: _id,\n        isActive: true,\n        canClose: true,\n        comp: _comp // this.$store.dispatch('getResultIO', newTab.r_id)\n\n      };\n      this.$store.dispatch('getTabContents', newTab); // this.$store.dispatch('getResultIO', this.newTab.r_id)\n      // console.log(newTab.r_id);\n    },\n    reload: function reload() {\n      this.$store.dispatch('getBMresults');\n      console.log('새로 고침됨'); // console.log(this.$store.state.BMresults);\n    }\n  }\n};",{"version":3,"sources":["BM_result.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\n\n  <v-flex xs12 class=\"tabItemCard\">\n    <v-card flat>\n      <v-layout justify-center row wrap>\n        <!--기간조회-->\n        <v-flex xs12 sm11 md11 xl11 mt-4>\n          <v-card flat class=\"daterange--default\">\n            <v-toolbar flat color=\"white\">\n              <v-toolbar-title>\n                <b>기간 조회&nbsp;</b> &nbsp;From\n                <v-chip close @input=\"removeChip(0)\">{{ chipRange[0] }}</v-chip>\n                To\n                <v-chip close @input=\"removeChip(1)\">{{ chipRange[1] }}</v-chip>\n              </v-toolbar-title>\n              <!-- <v-spacer></v-spacer> -->\n\n                <v-tooltip top>\n                  <v-btn icon  slot=\"activator\">\n                    <v-icon  @click=\"clickSearchBtn()\">{{ showDatePicker ? 'done' : 'search'}}</v-icon>\n                  </v-btn>\n                  <span>click !</span>\n                </v-tooltip>\n\n              <v-btn @click=\"clickSearchAll()\" dark color=\"blue lighten-2\">전체 기간</v-btn>\n            </v-toolbar>\n            <!--DatePicker-->\n            <v-slide-y-transition >\n              <v-flex xs12 v-show=\"showDatePicker\">\n                <v-card-text>\n                  <v-daterange :options=\"dateRangeOptions\" @input=\"onDateRangeChange\" />\n                </v-card-text>\n              </v-flex>\n\n            </v-slide-y-transition>\n            <!--/DatePicker-->\n          </v-card>\n        </v-flex>\n        <!--/기간조회-->\n\n        <!--결과 테이블 -->\n        <v-flex xs12 sm11 md11 xl11 mb-5>\n          <v-toolbar flat color=\"grey lighten-2\">\n            <v-toolbar-title>\n              <v-flex xs5>\n                <h4 class=\"headline\">벤치마킹 결과 &nbsp;&nbsp;</h4>\n              </v-flex>\n            </v-toolbar-title>\n            <!-- 벤치마킹 수행상태 -->\n            <v-btn-toggle v-model=\"toggle\" mandatory>\n              <v-btn @click=\"btnToggle(5)\" flat color=\"blue darken-4\">전체</v-btn>\n              <v-btn @click=\"btnToggle(0)\" flat color=\"blue darken-4\">수행준비</v-btn>\n              <v-btn @click=\"btnToggle(1)\" flat color=\"blue darken-4\">수행중</v-btn>\n              <v-btn @click=\"btnToggle(2)\" flat color=\"blue darken-4\">수행취소</v-btn>\n              <v-btn @click=\"btnToggle(3)\" flat color=\"blue darken-4\">수행완료</v-btn>\n            </v-btn-toggle>\n            <v-spacer></v-spacer>\n            <v-tooltip top>\n              <v-btn icon  slot=\"activator\">\n                <v-icon  @click=\"reload()\">cached</v-icon>\n              </v-btn>\n              <span>새로 고침</span>\n            </v-tooltip>\n            <!-- /벤치마킹 수행상태 -->\n          </v-toolbar>\n\n          <!--벤치마킹 결과 테이블-->\n          <v-data-table :headers=\"BMheaders\"\n                        :items=\"getBMresults\"\n                        :custom-sort=\"customSort\"\n                        item-key=\"r_id\"\n                        class=\"elevation-1\"\n                        :must-sort=\"true\"\n                        :pagination.sync=\"pagination\"\n                        expand>\n            <template v-slot:items=\"props\">\n                <tr>\n                  <td class=\"text-xs-center\">{{ props.item.flagStr }}</td>\n                  <td class=\"text-xs-center\">{{ props.item.r_id }}</td>\n                  <td class=\"text-xs-center\">{{ props.item.r_name }}</td>\n                  <td class=\"text-xs-center\">{{ props.item.r_c_timestamp }}</td>\n                  <td class=\"text-xs-center\">{{ props.item.r_s_timestamp }}</td>\n                  <td class=\"text-xs-center\">{{ props.item.r_e_timestamp }}</td>\n                  <td class=\"text-xs-center\">{{ props.item.totalTimestamp }}</td>\n                  <td class=\"text-xs-center\">\n                    <v-btn\n                      v-if='props.item.graph !==undefined'\n                      @click=\"openNewTab(props.item.graph, props.item.r_name, props.item.r_id)\"\n                      icon>\n                      <!-- props.item.graph는 store actions getBMresults에 정의된 value.graph를 의미 : error또는 equalizer -->\n                      <v-icon color=\"blue\">{{ props.item.graph }}</v-icon>\n                    </v-btn>\n                  </td>\n                  <td class=\"text-xs-center\">\n                    <v-menu right top>\n                      <v-btn icon slot=\"activator\"><v-icon>more_vert</v-icon></v-btn>\n                      <v-list dense >\n                        <v-list-tile\n                          @click=\"openNewTab(0, props.item.r_name, props.item.r_id)\">\n                          <v-list-tile-title>벤치마킹 정보 보기</v-list-tile-title>\n                        </v-list-tile>\n                        <v-divider></v-divider>\n                        <v-list-tile >\n                          <v-list-tile-title>수행 취소</v-list-tile-title>\n                        </v-list-tile>\n                        <v-divider></v-divider>\n                        <v-list-tile >\n                          <v-list-tile-title>재설정</v-list-tile-title>\n                        </v-list-tile>\n                        <v-divider></v-divider>\n                        <v-list-tile >\n                          <v-list-tile-title>재실행</v-list-tile-title>\n                        </v-list-tile>\n                      </v-list>\n                    </v-menu>\n                  </td>\n\n                  <td class=\"text-xs-center\">\n                  <v-btn  icon   @click=\"props.expanded = !props.expanded\">\n                    <v-icon>{{ props.expanded ? 'keyboard_arrow_up' : 'keyboard_arrow_down' }}</v-icon>\n                  </v-btn>\n                </td>\n              </tr>\n            </template>\n\n            <!--DB별 벤치마킹 정보 테이블-->\n            <template v-slot:expand=\"props\">\n              <v-flex xs12 v-for=\"db in props.item.relation\">\n               <v-card flat color=\"grey lighten-3\">\n                  <v-layout justify-center row wrap>\n                    <v-flex xs8 ma-3>\n                      <v-toolbar flat dense color=\"rgb(216, 220, 236)\" v-for=\"dbc in db.Dbconfigs\">\n                        <h2 class=\"title\">\n                          {{ dbc.nc_name }} &nbsp;(ver.{{ dbc.n_version }})\n                        </h2>\n                      </v-toolbar>\n                      <v-data-table\n                      :headers=\"BM_DBheaders\"\n                      :items=\"db.wlconfigs\"\n                      hide-actions\n                      item-key=\"db.nc_id\"\n                      class=\"elevation-1\"\n                      >\n                      <template v-slot:items=\"props\">\n                        <td class=\"text-xs-center\">{{ props.item.w_name}}</td>\n                        <td class=\"text-xs-center\">{{ props.item.prop.operationcount}}</td>\n                      <!-- items와 computed에서 정의한 함수를 바인딩하여 WLfiles[]를 표현 -->\n                        <td class=\"text-xs-center\">{{ props.item.w_read }}</td>\n                        <td class=\"text-xs-center\">{{ props.item.w_update}}</td>\n                        <td class=\"text-xs-center\">{{ props.item.w_insert }}</td>\n                        <td class=\"text-xs-center\">{{ props.item.w_scan }}</td>\n                        <td class=\"text-xs-center\">{{ props.item.w_readmodifywrite }}</td>\n                      </template>\n\n          </v-data-table>\n        </v-flex>\n      </v-layout>\n    </v-card>\n  </v-flex>\n  </template>\n  <!--/DB별 벤치마킹 정보 테이블-->\n  </v-data-table>\n  </v-flex>\n  <!--/결과 테이블 -->\n  </v-layout>\n  </v-card>\n  </v-flex>\n\n</template>\n\n<script>\n\n  import 'vuetify-daterange-picker/dist/vuetify-daterange-picker.css'\n  import { format, subDays } from 'date-fns'\n  export default {\n    data() {\n      return {\n        pagination: {\n          sortBy: 'create'\n        },\n        toggle: 0,\n        chip: [],\n        dates: ['2018-09-15', '2018-09-20'],\n        menu1: false,\n        chipRange: [],\n        range: [],\n        dateRangeOptions: {\n          startDate: format(subDays(new Date(), 30), 'YYYY-MM-DD'),\n          endDate: format(new Date(), 'YYYY-MM-DD'),\n          format: 'YYYY/MM/DD',\n          presets: [\n            {\n              label: 'Today',\n              range: [format(new Date(), 'YYYY-MM-DD'), format(new Date(), 'YYYY-MM-DD')]\n            },\n            {\n              label: 'Yesterday',\n              range: [format(subDays(new Date(), 1), 'YYYY-MM-DD'), format(new Date(), 'YYYY-MM-DD')]\n            },\n            {\n              label: 'Last 30 Days',\n              range: [format(subDays(new Date(), 30), 'YYYY-MM-DD'), format(new Date(), 'YYYY-MM-DD')]\n            },\n          ]\n        },\n\n        menu: false,\n        modal: false,\n        menu2: false,\n        selected: [],\n        show: false,\n        showBM_DB: false,\n        showDatePicker: false,\n        dialog: false,\n        expand: true,\n        BMheaders: [\n          { text: '상태', sortable: false, align: 'center', width: '7%' },\n          { text: 'r_id', sortable: false, align: 'center', width: '1%' },\n          { text: '벤치마킹 이름', sortable: false, align: 'center', width: '15%' },\n          { text: '생성시간', value: 'create', align: 'center', width: '10%' },\n          { text: '시작시간', value: 'start', align: 'center', width: '10%' },\n          { text: '종료시간', value: 'end', align: 'center', width: '10%' },\n          { text: '총 소요시간', value: 'total', align: 'center', width: '15%' },\n          { text: '결과', sortable: false, align: 'center', width: '5%' },\n          { text: '추가 기능', sortable: false, align: 'center', width: '5%' },\n          { text: '더보기', sortable: false, align: 'center', width: '5%' }\n        ],\n        BM: [],\n        BM_DBheaders: [\n          { text: '워크로드 명', sortable: false, value: 'WLname', align: 'center', width: '20%' },\n          { text: 'Operation Count', value: 'Read', sortable: false, align: 'center', width: '15%' },\n          { text: 'Read(%)', value: 'Read', sortable: false, align: 'center', width: '10%' },\n          { text: 'Update(%)', value: 'Update', sortable: false, align: 'center', width: '10%' },\n          { text: 'Insert(%)', value: 'Insert', sortable: false, align: 'center', width: '10%' },\n          { text: 'Scan(%)', value: 'Scan', sortable: false, align: 'center', width: '10%' },\n          { text: 'ReadModifyWrite(%)', value: 'Rmw', sortable: false, align: 'center', width: '10%' }\n        ],\n        BM_DB: []\n      } //return End\n    },\n\n    created() {\n      //최초로 결과 데이터 가져옴\n      this.$store.dispatch('getBMresults')\n\n      this.$store.commit('setActiveTab', 0)\n      this.range = [this.dateRangeOptions.startDate, this.dateRangeOptions.endDate]\n      this.chipRange = [null, null]\n      this.pagination.descending = true\n    },\n\n    computed: {\n      //벤치마킹 결과 가져오기\n      getBMresults() {\n        // console.log(this.$store.state.BMresults);\n        return this.$store.state.BMresults\n\n      },\n\n      //벤치마킹 DB-WL 정보 가져오기\n      getBM_DB_WLresults() {\n        return this.$store.state.BM_DB_WL\n      }\n    },\n\n    methods: {\n      findAllTime(items) {\n        let oldest = new Date()\n        let latest = subDays(new Date(), 9999)\n        items.forEach(item => {\n          let tempC = new Date(item.r_c_timestamp)\n          if (oldest > tempC) oldest = tempC\n          if (latest < tempC) latest = tempC\n        })\n        // console.log(latest)\n        this.chipRange = [format(oldest, 'YYYY-MM-DD'), format(latest, 'YYYY-MM-DD')]\n        // return format(oldest , 'YYYY-MM-DD')\n      },\n\n      clickSearchAll() {\n        // this.$store.commit('filterBMFlag', 5)//select all\n        // console.log(this.$refs.btnAll)\n\n        this.toggle = 0\n        // this.btnToggle(5)\n        this.$store.commit('filterBMDate', [null, null])\n        let items = this.$store.state.BMresults\n        // console.log(items)\n        this.findAllTime(items)\n        // this.chipRange= [this.findOldestTime(items)]\n      },\n\n      clickSearchBtn() {\n        //search\n        if (this.showDatePicker) {\n          // console.log(this.range)\n          this.toggle = 0\n          this.chipRange = Object.assign([], this.range)\n          this.$store.commit('filterBMDate', this.range)\n        }\n        this.showDatePicker = !this.showDatePicker\n      },\n\n      btnToggle(idx) {\n        // let temp = this.toggle\n        // if(temp == 0)\n        //   temp = 5\n        // else\n        //   temp -= 1\n        this.$store.commit('filterBMFlag', idx)\n        // console.log(evt)\n      },\n\n      onDateRangeChange(range) {\n        this.range = range\n      },\n\n      customSort(items, index, isDescending) {\n        items.sort((a, b) => {\n          if (index === 'create') {\n            if (isDescending) {\n              return new Date(b.r_c_timestamp) - new Date(a.r_c_timestamp)\n            } else {\n              return new Date(a.r_c_timestamp) - new Date(b.r_c_timestamp)\n            }\n          } else if (index === 'start') {\n            if (isDescending) {\n              return new Date(b.r_s_timestamp) - new Date(a.r_s_timestamp)\n            } else {\n              return new Date(a.r_s_timestamp) - new Date(b.r_s_timestamp)\n            }\n          } else if (index === 'end') {\n            if (isDescending) {\n              return new Date(b.r_e_timestamp) - new Date(a.r_e_timestamp)\n            } else {\n              return new Date(a.r_e_timestamp) - new Date(b.r_e_timestamp)\n            }\n          } else {\n            if (isDescending) {\n              if (b.totalTimestamp > a.totalTimestamp) return -1\n              else return 1\n            } else {\n              if (a.totalTimestamp > b.totalTimestamp) return -1\n              else return 1\n            }\n          }\n        })\n        return items\n      },\n\n      removeChip(idx) {\n        this.toggle = 0\n        this.chipRange[idx] = null\n        this.$store.commit('filterBMDate', this.chipRange)\n      },\n\n      openNewTab: function(flag, _rname, _id) {\n        // console.log(_id);\n        let _comp = null\n        let _name = null\n        let _type = null\n        if (flag != 0) {\n          if (flag === 'equalizer') flag = 1\n          else flag = 2\n        }\n        // console.log(\"click\" + flag)\n        switch (flag) {\n          case 0: //\n            _comp = 'BM_detail'\n            _name = _rname + '의 정보'\n            _type = 'detail'\n            break\n          case 1:\n            _comp = 'BM_graph'\n            _name =  _rname + '의 결과'\n            _type = 'graph'\n            break\n          case 2:\n            _comp = 'BM_error'\n            _name = _rname + '의 에러 정보'\n            _type = 'error'\n            break\n        }\n        let newTab = {\n          title: _name,\n          id: this.$store.state.tabs.length,\n          type: _type,\n          r_id: _id,\n          isActive: true,\n          canClose: true,\n          comp: _comp\n        }\n        // this.$store.dispatch('getResultIO', newTab.r_id)\n        this.$store.dispatch('getTabContents', newTab)\n        // this.$store.dispatch('getResultIO', this.newTab.r_id)\n        // console.log(newTab.r_id);\n\n\n      },\n\n      reload() {\n        this.$store.dispatch('getBMresults')\n        console.log('새로 고침됨');\n        // console.log(this.$store.state.BMresults);\n      }\n\n    }\n  }\n\n</script>\n\n<style lang=\"css\" scoped>\n\n  table.v-table tbody tr td {\n    font-size: 14px;\n  }\n  .theme--light.v-btn-toggle {\n    background-color: #e0e0e0;\n  }\n  .v-btn {\n    border-radius: 14px;\n  }\n  .v-btn:before {\n    border-radius: 14px;\n  }\n  .v-input input {\n    max-height: 50px;\n    width: 500px;\n  }\n  .dateRange {\n    width: 700px;\n  }\n  .v-input {\n    max-height: 32px;\n    min-width: 500px;\n  }\n\n\n\n  .statusflag {\n    color: rgb(230, 230, 230);\n  }\n\n\n</style>\n"],"sourceRoot":"src/components"}]}
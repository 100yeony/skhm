{"remainingRequest":"/home/skhm/web_client/client_test/node_modules/babel-loader/lib/index.js!/home/skhm/web_client/client_test/node_modules/vuetify-loader/lib/loader.js!/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/skhm/web_client/client_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/skhm/web_client/client_test/src/components/DBsetting.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/skhm/web_client/client_test/src/components/DBsetting.vue","mtime":1563180614951},{"path":"/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DBsettingBox from './DBsettingBox.vue';\nexport default {\n  components: {\n    DBsettingBox: DBsettingBox\n  },\n  data: function data() {\n    return {\n      settingBoxSeen: false,\n      selected: [],\n      DBnames: [],\n      test: true,\n      show2: true,\n      ncidTemp: null\n    };\n  },\n  props: ['contents'],\n  created: function created() {\n    this.$store.dispatch('getDBs');\n    this.names = this.$store.state.DBfiles; // this.$store.state.DBfiles.forEach(DB => {\n    //   DB.dbconfigs.forEach(x => {\n    //     this.dbTemp.push(x)\n    //   })\n    // })\n    //\n    //\n    //   this.$store.state.Dbconfigs.forEach(db => {\n    //     this.dbInfo.push(this.dbTemp.find(x => x.nc_id == db.nc_id))\n    //\n    //   })\n    // this.$store.state.DBfiles.forEach(DB =>{\n    //   DB.dbconfigs.forEach(x =>{\n    //     this.dbTemp.push(x)\n    //   })\n    // })\n    //\n    // this.names.forEach(x => {\n    //   x.name.forEach(db =>{\n    //     db.name.push(this.dbTemp.find(x=>x.n_id == db.n_id))\n    //   })\n    // })\n  },\n  computed: {\n    getDBfiles: function getDBfiles() {\n      return this.$store.state.DBfiles;\n    }\n  },\n  methods: {\n    // clearSelect(){\n    //   let self = this\n    //   this.settingBoxSeen = false\n    //   this.$store.commit('setIsActiveDB', -1)\n    // },\n    showLoading: function showLoading() {\n      this.$store.commit('setIsLoading', true);\n    },\n    onSelect: function onSelect(ncId) {\n      var _this = this;\n\n      if (this.$store.state.selectedDB.nc_id == ncId) {\n        // this.$refs.tab_right.onSelect()\n        return;\n      }\n\n      this.showLoading();\n      if (this.settingBoxSeen) this.settingBoxSeen = false; //색깔 바꾸는거\n\n      this.$store.commit('setIsActiveDB', ncId); // this.$store.dispatch('setDBfiles', nId)\n\n      this.$store.dispatch('getSelectedDB', ncId).then(function (res) {\n        if (res.status == 200) {\n          _this.settingBoxSeen = true; // this.$refs.tab_right.onSelect()\n        }\n      });\n      this.ncidTemp = ncId;\n    }\n  }\n};",{"version":3,"sources":["DBsetting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA,OAAA,YAAA,MAAA,oBAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA;AADA,GADA;AAIA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,cAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,OAAA,EAAA,EAHA;AAIA,MAAA,IAAA,EAAA,IAJA;AAKA,MAAA,KAAA,EAAA,IALA;AAMA,MAAA,QAAA,EAAA;AANA,KAAA;AAAA,GAJA;AAYA,EAAA,KAAA,EAAA,CAAA,UAAA,CAZA;AAaA,EAAA,OAbA,qBAaA;AAIA,SAAA,MAAA,CAAA,QAAA,CAAA,QAAA;AACA,SAAA,KAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CALA,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAzCA;AA0CA,EAAA,QAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,OAAA;AACA;AAHA,GA1CA;AAkDA,EAAA,OAAA,EAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAA,WANA,yBAMA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,cAAA,EAAA,IAAA;AACA,KARA;AASA,IAAA,QATA,oBASA,IATA,EASA;AAAA;;AACA,UAAA,KAAA,MAAA,CAAA,KAAA,CAAA,UAAA,CAAA,KAAA,IAAA,IAAA,EAAA;AACA;AACA;AACA;;AACA,WAAA,WAAA;AACA,UAAA,KAAA,cAAA,EACA,KAAA,cAAA,GAAA,KAAA,CAPA,CAQA;;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,eAAA,EAAA,IAAA,EATA,CAUA;;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,IAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,GAAA,CAAA,MAAA,IAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,cAAA,GAAA,IAAA,CADA,CAEA;AACA;AACA,OALA;AAOA,WAAA,QAAA,GAAA,IAAA;AACA;AA5BA;AAlDA,CAAA","sourcesContent":["<template lang=\"html\">\n    <v-container fluid align-start ma-2 pa-5>\n      <v-layout row wrap justify-space-around fill-height>\n        <!--NoSQL 목록-->\n        <v-flex xs12 sm5 md5 xl5>\n          <!--v-card 배치-->\n          <v-container fluid grid-list-xl>\n          <v-layout justify-center row wrap>\n            <!--NoSQL DB v-card(NoSQL종류별로 반복)-->\n            <v-flex xs10>\n              <v-card v-for=\"name in getDBfiles\" :key=\"name.n_id\" color=\"white\">\n                <v-card-title>\n                  <div>\n                    <div class=\"headline\">{{ name.n_name.toUpperCase() }}</div>\n                    <span>Version {{ name.n_version }}</span>\n                  </div>\n                  <v-spacer></v-spacer>\n                  <!-- 새로운 DB config파일 추가 버튼-->\n                  <v-tooltip bottom>\n                  <template v-slot:activator=\"{ on }\">\n                    <v-btn left small color=\"#34495E\" fab round dark class=\"mb-2\" slot=\"activator\" v-on=\"on\"><v-icon>add</v-icon>\n                  </v-btn>\n                  </template>\n                  <span>현재 지원하지 않는 기능입니다.</span>\n                  </v-tooltip>\n                  <!-- /새로운 DB config파일 추가 버튼-->\n                  <v-flex xs1></v-flex>\n                </v-card-title>\n\n                <v-layout justify-center row wrap>\n                  <v-btn icon @click=\"show2 = !show2\">\n                    <v-icon>{{ show2 ? 'keyboard_arrow_down' : 'keyboard_arrow_up' }}</v-icon>\n                  </v-btn>\n                </v-layout>\n                <!-- DBconfig파일 보여지는 부분 -->\n                <v-slide-y-transition>\n                  <div class=\"v-card__text\" v-show=\"show2\">\n                    <v-spacer></v-spacer>\n                    <v-form>\n                      <v-container\n                                    id=\"scroll-target\"\n                                    style=\"max-height: 300px\"\n                                    class=\"scroll-y\"\n                                    >\n                        <v-layout v-scroll:#scroll-target=\"onScroll\"\n                                  column\n                                  style=\"height: 100%\"\n                                  >\n                          <v-flex xs12 sm12 md12 xl12  v-for=\" dbconfigs in name.dbconfigs\" :key=\"name.nc_id\">\n                            <!-- <template v-slot:items=\"props\"> -->\n                            <v-list v-show = \"name.n_id = dbconfigs.n_id\">\n                              <v-list-tile v-if=\"dbconfigs.nc_id\" @click=\"onSelect()\">\n                                <!-- <template v-slot:items=\"props\">\n                                    <tr :active=\"props.item.isActive\">\n                                      <td @click=\"onSelect(props.item)\" :key=\"props.item.n_id\" class=\"text-xs-center\"></td>\n                                      </td>\n                                    </tr>\n                                  </template> -->\n                                <v-list-tile-avatar  @click=\"onSelect(dbconfigs.nc_id)\" class=\"hover\">\n                                  <v-avatar size=\"35\" color=\"orange lighten-2\">\n                                    <span class=\"white--text headline\" >C</span>\n                                  </v-avatar>\n                                </v-list-tile-avatar>\n                                <v-list-tile-content  @click=\"onSelect(dbconfigs.nc_id)\" class=\"hover\" >\n                                  <v-list-tile-title>{{dbconfigs.nc_name}}</v-list-tile-title>\n                                </v-list-tile-content>\n                                <v-list-tile-action>\n                                  <v-layout col wrap>\n                                  <v-tooltip bottom>\n\n                                    <v-btn icon ripple slot=\"activator\" >\n                                      <v-icon color=\"grey lighten-1\">file_copy</v-icon>\n                                    </v-btn>\n\n                                    <span>현재 지원하지 않는 기능입니다.</span>\n                                    </v-tooltip>\n                                    <v-spacer></v-spacer>\n\n                                    <v-tooltip bottom>\n\n                                    <v-btn icon ripple slot=\"activator\">\n                                      <v-icon color=\"grey lighten-1\">delete</v-icon>\n                                    </v-btn>\n\n                                  <span>현재 지원하지 않는 기능입니다.</span>\n                                  </v-tooltip>\n                                  </v-layout>\n                                </v-list-tile-action>\n                              </v-list-tile>\n                              <!-- <v-divider v-if=\"configs.divider\"></v-divider> -->\n                            </v-list>\n                          <!-- </template> -->\n                          </v-flex>\n                        </v-layout>\n                      </v-container>\n                    </v-form>\n                  </div>\n                </v-slide-y-transition>\n                <!-- /DBconfig파일 보여지는 부분 -->\n                <v-divider class='mb-5' ></v-divider>\n              </v-card>\n            </v-flex>\n            <!--/NoSQL DB v-card-->\n          </v-layout>\n        </v-container>\n        <!--/v-card 배치-->\n      </v-flex>\n      <!--/NoSQL 목록-->\n\n      <!--DB 설정-->\n        <DBsettingBox ref=\"tab_right\" :ncidTemp=\"ncidTemp\" :settingBoxSeen=\"settingBoxSeen\" :isDialog=\"false\"></DBsettingBox>\n        <!--DBsettingBox.vue -->\n      <!--/DB 설정-->\n\n\n          </v-layout>\n        </v-container>\n    </template>\n\n    <script>\n    import DBsettingBox from './DBsettingBox.vue'\n     export default {\n       components: {\n         DBsettingBox\n       },\n      data: () => ({\n        settingBoxSeen: false,\n        selected: [],\n        DBnames : [],\n        test: true,\n        show2 : true,\n        ncidTemp: null\n      }),\n      props: ['contents'],\n      created() {\n\n\n\n        this.$store.dispatch('getDBs')\n        this.names = this.$store.state.DBfiles\n        // this.$store.state.DBfiles.forEach(DB => {\n        //   DB.dbconfigs.forEach(x => {\n        //     this.dbTemp.push(x)\n        //   })\n        // })\n        //\n        //\n        //   this.$store.state.Dbconfigs.forEach(db => {\n        //     this.dbInfo.push(this.dbTemp.find(x => x.nc_id == db.nc_id))\n        //\n        //   })\n        // this.$store.state.DBfiles.forEach(DB =>{\n        //   DB.dbconfigs.forEach(x =>{\n        //     this.dbTemp.push(x)\n        //   })\n        // })\n        //\n        // this.names.forEach(x => {\n        //   x.name.forEach(db =>{\n        //     db.name.push(this.dbTemp.find(x=>x.n_id == db.n_id))\n        //   })\n        // })\n      },\n      computed : {\n        getDBfiles() {\n          return this.$store.state.DBfiles\n        },\n        // dbconfigData() {\n        //   return this.$store.state.db_configsTest\n        // }\n      },\n      methods:{\n        // clearSelect(){\n        //   let self = this\n        //   this.settingBoxSeen = false\n        //   this.$store.commit('setIsActiveDB', -1)\n        // },\n        showLoading(){\n            this.$store.commit('setIsLoading', true)\n        },\n        onSelect(ncId) {\n          if(this.$store.state.selectedDB.nc_id == ncId){\n            // this.$refs.tab_right.onSelect()\n            return\n          }\n          this.showLoading()\n          if (this.settingBoxSeen)\n            this.settingBoxSeen = false\n          //색깔 바꾸는거\n          this.$store.commit('setIsActiveDB', ncId)\n          // this.$store.dispatch('setDBfiles', nId)\n          this.$store.dispatch('getSelectedDB', ncId).then((res)=>{\n            if(res.status == 200){\n              this.settingBoxSeen = true\n              // this.$refs.tab_right.onSelect()\n            }\n          })\n\n          this.ncidTemp = ncId\n        },\n\n        // selectfind(x){\n        //   this.names.find(x => {\n        //     if ( x.nc_id === this.ncId ) {\n        //     this.selected = x\n        //   }\n        //     console.log(this.selected)\n        // })\n         // this.names.dbconfigs.push(this.dbTemp.find(x => x.nc_id == db.nc_id))\n     // },\n\n      }\n    }\n    </script>\n\n    <style lang=\"css\" scoped>\n    .hover {\n      cursor  : pointer;\n    }\n    </style>\n"],"sourceRoot":"src/components"}]}
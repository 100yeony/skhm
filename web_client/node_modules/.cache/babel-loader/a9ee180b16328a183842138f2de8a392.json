{"remainingRequest":"/home/skhm/web_client/client_test/node_modules/babel-loader/lib/index.js!/home/skhm/web_client/client_test/node_modules/vuetify-loader/lib/loader.js!/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/skhm/web_client/client_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/skhm/web_client/client_test/src/components/BM_detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/skhm/web_client/client_test/src/components/BM_detail.vue","mtime":1563180614951},{"path":"/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      active_tab: null,\n      BMheaders: [{\n        text: '상태',\n        sortable: false,\n        align: 'center',\n        width: '8%'\n      }, {\n        text: '벤치마킹 이름',\n        sortable: false,\n        align: 'center',\n        width: '8%'\n      }, {\n        text: '생성시간',\n        sortable: false,\n        align: 'center',\n        width: '12%'\n      }, {\n        text: '시작시간',\n        sortable: false,\n        align: 'center',\n        width: '12%'\n      }, {\n        text: '종료시간',\n        sortable: false,\n        align: 'center',\n        width: '12%'\n      }, {\n        text: '총 소요시간',\n        value: 'total',\n        sortable: false,\n        align: 'center',\n        width: '12%'\n      }],\n      DBconfigheaders: [{\n        text: 'DB config 파일명',\n        sortable: false,\n        align: 'center',\n        width: '8%'\n      }, {\n        text: 'Version',\n        sortable: false,\n        align: 'center',\n        width: '12%'\n      }, {\n        text: '노드 수',\n        sortable: false,\n        align: 'center',\n        width: '8%'\n      }, {\n        text: '삭제여부',\n        sortable: false,\n        align: 'center',\n        width: '12%'\n      }],\n      NodeClusterheaders: [{\n        text: '노드',\n        sortable: false,\n        align: 'center',\n        width: '8%'\n      }, {\n        text: '버전',\n        sortable: false,\n        align: 'center',\n        width: '8%'\n      }, {\n        text: '노드 수',\n        sortable: false,\n        align: 'center',\n        width: '8%'\n      }, {\n        text: '저장소 경로',\n        sortable: false,\n        align: 'center',\n        width: '12%'\n      }],\n      NodeSpecheaders: [// { text: 'nr_id', sortable: false, align: 'center', width: '10%' },\n      {\n        text: 'IP address',\n        sortable: false,\n        align: 'center',\n        width: '15%'\n      }, {\n        text: 'CPU',\n        sortable: false,\n        align: 'center',\n        width: '20%'\n      }, {\n        text: 'RAM(GB)',\n        sortable: false,\n        align: 'center',\n        width: '10%'\n      }, {\n        text: 'Storage',\n        sortable: false,\n        align: 'center',\n        width: '15%'\n      }, {\n        text: '역할',\n        sortable: false,\n        align: 'center',\n        width: '15%'\n      }],\n      expand: true,\n      rowsPerPageItems: [4, 8, 12],\n      pagination: {\n        rowsPerPage: 4\n      },\n      BMinfo: [],\n      dbTemp: [],\n      //nc_id별 데이터들\n      DBinfo: []\n    };\n  },\n  //data End\n  props: ['contents'],\n  created: function created() {\n    var _this = this;\n\n    console.log(this.contents); //v-datatable은 items에 object 형태가 올 수 없기 때문에 배열로 다시 만들어 바인딩\n\n    this.BMinfo.push({\n      r_name: this.contents.r_name,\n      r_status_flag: this.contents.flagStr,\n      r_c_timestamp: this.contents.r_c_timestamp,\n      r_s_timestamp: this.contents.r_s_timestamp,\n      r_e_timestamp: this.contents.r_e_timestamp,\n      totalTimestamp: this.contents.totalTimestamp\n    }), //v-datatable은 items에 array속 array 도 읽지 못하기 때문에 dbTemp, specTemp라는 배열을 만들고 바인딩\n    //tab에서 v-for돌때 DBinfo사용함....두번 array들어간것 못찾아서?\n    this.$store.state.DBfiles.forEach(function (DB) {\n      DB.dbconfigs.forEach(function (x) {\n        _this.dbTemp.push(x);\n      });\n    }); //나중에 list??로 보여져셔 this.conetents로 데이터 읽기! 데이터 테이블 말고..r_id정보 등\n    // let wIds = []\n\n    this.contents.relation.forEach(function (x) {\n      x.Dbconfigs.forEach(function (db) {\n        _this.DBinfo.push(_this.dbTemp.find(function (x) {\n          return x.nc_id == db.nc_id;\n        }));\n\n        console.log(_this.DBinfo);\n      }); // x.w_ids.forEach(w => {\n      //   wIds.push(w)\n      // })\n    }); // console.log(wIds);\n    // this.$store.dispatch('getWLpropMany', wIds)\n  },\n  //created() End\n  computed: {},\n  methods: {} // getWLpropMany(wIds){\n  //   this.$store.dispatch('getWLpropMany', wIds)\n  // }\n  //methods End\n  //export default End\n\n};",{"version":3,"sources":["BM_detail.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\n\n  <v-container>\n    <v-layout row wrap justify-center>\n      <!-- 전체 페이지 -->\n      <v-flex xs12>\n        <v-card-title primary-title>\n          <h3 class=\"headline mb-0\"><b>벤치마킹 정보</b>&nbsp; &nbsp;{{this.contents.r_name}}</h3>\n        </v-card-title>\n        <hr /> &nbsp;\n        <v-card flat>\n\n          <v-layout row wrap justify-center>\n            <v-flex xs11 ma-3>\n              <v-card flat>\n\n                <v-layout row wrap justify-center>\n                  <v-flex xs12 mt-4 mb-4>\n                    <v-toolbar flat dense color=\"rgb(232, 232, 233)\">\n                      <h2 class=\"title\">벤치마킹 정보</h2>\n                    </v-toolbar>\n\n                    <v-data-table :headers=\"BMheaders\"\n                                  :items=\"BMinfo\"\n                                  item-key=\"r_id\"\n                                  hide-actions\n                                  class=\"elevation-1\">\n                      <template v-slot:items=\"props\">\n                                    <tr>\n                                      <td class=\"text-xs-center\">{{ props.item.r_status_flag }}</td>\n                                      <td class=\"text-xs-center\">{{ props.item.r_name }}</td>\n                                      <td class=\"text-xs-center\">{{ props.item.r_c_timestamp }}</td>\n                                      <td class=\"text-xs-center\">{{ props.item.r_s_timestamp }}</td>\n                                      <td class=\"text-xs-center\">{{ props.item.r_e_timestamp }}</td>\n                                      <td class=\"text-xs-center\">{{ props.item.totalTimestamp }}</td>\n                                  </tr>\n                                </template>\n                    </v-data-table>\n\n                  </v-flex>\n\n                  <v-flex xs12 mb-4>\n                    <v-toolbar flat dense color=\"rgb(232, 232, 233)\">\n                      <h2 class=\"title\">DB config 파일</h2>\n                    </v-toolbar>\n\n                    <v-data-table :headers=\"DBconfigheaders\"\n                                  :items=\"DBinfo\"\n                                  item-key=\"nc_name\"\n                                  hide-actions\n                                  class=\"elevation-1\">\n                      <template v-slot:items=\"props\">\n                                  <tr>\n                                    <td class=\"text-xs-center\">{{ props.item.nc_name }}</td>\n                                    <td class=\"text-xs-center\">{{ props.item.n_version }}</td>\n                                    <td class=\"text-xs-center\">{{ props.item.n_node_count }}</td>\n                                    <td class=\"text-xs-center\">{{ props.item.n_d_flagStr }}</td>\n                                </tr>\n                              </template>\n                    </v-data-table>\n\n                  </v-flex>\n\n                </v-layout>\n\n              </v-card>\n\n            </v-flex>\n\n            <!-- DB탭 -->\n            <v-flex xs11 ma-3>\n              <h4 class=\"headline mb-3\">DB config 파일 별 정보</h4>\n              <v-card flat color=\"rgba(231, 231, 231, 0.34)\">\n                <v-tabs show-arrows\n                        :value=\"active_tab\"\n                        height=\"37\"\n                        slider-color=\"none\"\n                        color=\"white\">\n                  <v-tab v-for=\"(rel, idx) in DBinfo\" :key=\"idx\">\n                    {{rel.nc_name}} (Ver. {{rel.n_version}} )\n                  </v-tab>\n                  <v-tab-item v-for=\"(rel, idx) in this.contents.relation\"\n                              :key=\"idx\"\n                              transition=\"slide-x-transition\"\n                              class=\"tabItemCard\">\n                    <v-flex xs12>\n                      <v-card flat color=\"rgba(231, 231, 231, 0)\">\n                        <v-layout justify-center>\n                          <!-- DB탭 -->\n                          <v-flex xs11 ma-4>\n                            <!-- spec 정보-->\n                            <v-flex xs12 mb-4 v-for=\"Db in rel.Dbconfigs\" :key=\"Db.nr_id\">\n                              <v-toolbar flat dense color=\"rgb(232, 232, 233)\">\n                                <h2 class=\"title\">Node spec</h2>\n                              </v-toolbar>\n                              <v-card flat>\n\n                                <v-data-table :headers=\"NodeSpecheaders\"\n                                              :items=\"Db.specs\"\n                                              item-key=\"nr_id\"\n                                              hide-actions\n                                              class=\"elevation-1\">\n                                  <template v-slot:items=\"props\">\n                                          <tr>\n                                            <!-- <td class=\"text-xs-center\">{{ props.item.nr_id }}</td> -->\n                                            <td class=\"text-xs-center\">{{ props.item.ip }}</td>\n                                            <td class=\"text-xs-center\">{{  props.item.cpu }}</td>\n                                            <td class=\"text-xs-center\">{{  props.item.mem }}</td>\n                                            <td class=\"text-xs-center\">{{  props.item.s_storage }}</td>\n                                            <td class=\"text-xs-center\">{{  props.item.n_roleStr }}</td>\n                                        </tr>\n                                     </template>\n                                </v-data-table>\n                              </v-card>\n                            </v-flex>\n                            <!-- /spec 정보-->\n\n                            <v-flex xs12>\n                              <v-toolbar flat dense color=\"rgb(232, 232, 233)\">\n                                <h2 class=\"title\">Workload</h2>\n                              </v-toolbar>\n                              <v-divider></v-divider>\n                              <v-card flat color=\"rgba(232, 232, 233, 0.61)\">\n                                <v-container fluid grid-list-md>\n                                  <v-data-iterator :items=\"rel.wlconfigs\"\n                                                   item-key=\"w_id\"\n                                                   :rows-per-page-items=\"rowsPerPageItems\"\n                                                   :pagination.sync=\"pagination\"\n                                                   content-tag=\"v-layout\"\n                                                   :expand=\"expand\"\n                                                   row\n                                                   wrap>\n                                    <template v-slot:item=\"props\">\n                                                   <v-flex xs12 sm6 md4 lg3>\n                                                     <v-card>\n                                                       <v-card-title>\n                                                         파일명 :&nbsp;<h3>{{ props.item.w_name }}</h3>\n                                                       </v-card-title>\n                                                       <v-divider></v-divider>\n                                                       <v-list dense>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>연산비율:</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.totalOperation }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>생성시간:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.w_c_timestamp }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>삭제시간:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.w_d_timestamp }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>사용빈도:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.w_freq_count }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>에러빈도:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.w_error_count }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>삭제여부:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.w_d_flagStr }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>레코드수:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.recordcount }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>연산수:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.operationcount }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>requestdistribution:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.requestdistribution }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>스레드수:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.threadcount }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                       </v-list>\n                                                       <v-divider></v-divider>\n                                                       <v-switch\n                                                         v-model=\"props.expanded\"\n                                                         :label=\"(props.expanded) ? '세부속성' : '상세정보 더보기'\"\n                                                         class=\"pl-3 mt-0\"\n                                                       ></v-switch>\n                                                       <v-list v-if=\"props.expanded\" dense >\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>readallfields:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.readallfields }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>필드수:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.fieldcount }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>minfieldlength:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.minfieldlength }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>writeallfields:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.writeallfields }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>minscanlength:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.minscanlength }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>maxscanlength:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.maxscanlength }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>scanlengthdistribution:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.scanlengthdistribution }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>insertstart:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.insertstart }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>insertcount:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.insertcount }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>zeropadding:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.zeropadding }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>insertorder:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.insertorder }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>fieldnameprefix:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.fieldnameprefix }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>hdrhistogram_percentiles:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.hdrhistogram_percentiles }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                         <v-list-tile>\n                                                           <v-list-tile-content>datasize:</v-list-tile-content>\n                                                           <v-list-tile-content class=\"align-end\">{{ props.item.prop.datasize }}</v-list-tile-content>\n                                                         </v-list-tile>\n                                                       </v-list>\n                                                     </v-card>\n                                                   </v-flex>\n                                                 </template>\n                                  </v-data-iterator>\n                                </v-container>\n\n                              </v-card>\n                            </v-flex>\n                            <!-- /워크로드 정보 -->\n                          </v-flex>\n                          <!-- /DB탭 -->\n                        </v-layout>\n                      </v-card>\n                    </v-flex>\n                  </v-tab-item>\n\n                </v-tabs>\n              </v-card>\n            </v-flex>\n            <!--/ DB탭 -->\n\n          </v-layout>\n\n        </v-card>\n      </v-flex>\n      <!-- /전체 페이지 -->\n    </v-layout>\n  </v-container>\n\n</template>\n\n<script>\n\n  export default {\n    data() {\n      return {\n        active_tab: null,\n        BMheaders: [\n          { text: '상태', sortable: false, align: 'center', width: '8%' },\n          { text: '벤치마킹 이름', sortable: false, align: 'center', width: '8%' },\n          { text: '생성시간', sortable: false, align: 'center', width: '12%' },\n          { text: '시작시간', sortable: false, align: 'center', width: '12%' },\n          { text: '종료시간', sortable: false, align: 'center', width: '12%' },\n          { text: '총 소요시간', value: 'total', sortable: false, align: 'center', width: '12%' }\n        ],\n        DBconfigheaders: [\n          { text: 'DB config 파일명', sortable: false, align: 'center', width: '8%' },\n          { text: 'Version', sortable: false, align: 'center', width: '12%' },\n          { text: '노드 수', sortable: false, align: 'center', width: '8%' },\n          { text: '삭제여부', sortable: false, align: 'center', width: '12%' }\n        ],\n        NodeClusterheaders: [\n          { text: '노드', sortable: false, align: 'center', width: '8%' },\n          { text: '버전', sortable: false, align: 'center', width: '8%' },\n          { text: '노드 수', sortable: false, align: 'center', width: '8%' },\n          { text: '저장소 경로', sortable: false, align: 'center', width: '12%' }\n        ],\n        NodeSpecheaders: [\n          // { text: 'nr_id', sortable: false, align: 'center', width: '10%' },\n          { text: 'IP address', sortable: false, align: 'center', width: '15%' },\n          { text: 'CPU', sortable: false, align: 'center', width: '20%' },\n          { text: 'RAM(GB)', sortable: false, align: 'center', width: '10%' },\n          { text: 'Storage', sortable: false, align: 'center', width: '15%' },\n          { text: '역할', sortable: false, align: 'center', width: '15%' }\n        ],\n        expand: true,\n        rowsPerPageItems: [4, 8, 12],\n        pagination: {\n          rowsPerPage: 4\n        },\n        BMinfo: [],\n        dbTemp: [], //nc_id별 데이터들\n        DBinfo: []\n      }\n    }, //data End\n    props: ['contents'],\n    created() {\n      console.log(this.contents)\n      //v-datatable은 items에 object 형태가 올 수 없기 때문에 배열로 다시 만들어 바인딩\n      this.BMinfo.push({\n        r_name: this.contents.r_name,\n        r_status_flag: this.contents.flagStr,\n        r_c_timestamp: this.contents.r_c_timestamp,\n        r_s_timestamp: this.contents.r_s_timestamp,\n        r_e_timestamp: this.contents.r_e_timestamp,\n        totalTimestamp: this.contents.totalTimestamp\n      }),\n        //v-datatable은 items에 array속 array 도 읽지 못하기 때문에 dbTemp, specTemp라는 배열을 만들고 바인딩\n        //tab에서 v-for돌때 DBinfo사용함....두번 array들어간것 못찾아서?\n        this.$store.state.DBfiles.forEach(DB => {\n          DB.dbconfigs.forEach(x => {\n            this.dbTemp.push(x)\n          })\n        })\n      //나중에 list??로 보여져셔 this.conetents로 데이터 읽기! 데이터 테이블 말고..r_id정보 등\n\n      // let wIds = []\n      this.contents.relation.forEach(x => {\n        x.Dbconfigs.forEach(db => {\n          this.DBinfo.push(this.dbTemp.find(x => x.nc_id == db.nc_id))\n          console.log(this.DBinfo)\n        })\n        // x.w_ids.forEach(w => {\n        //   wIds.push(w)\n        // })\n      })\n      // console.log(wIds);\n      // this.$store.dispatch('getWLpropMany', wIds)\n    }, //created() End\n    computed: {},\n    methods: {\n      // getWLpropMany(wIds){\n      //   this.$store.dispatch('getWLpropMany', wIds)\n      // }\n    } //methods End\n  } //export default End\n\n</script>\n\n<style lang=\"css\" scoped>\n\n  .tabItemCard {\n    border-width: 1px;\n    border-style: solid;\n    border-color: rgba(210, 210, 210, 0.65);\n    /* border-bottom-right-radius: 15px;\n                                      border-bottom-left-radius: 15px; */\n    /* border-top-right-radius: 15px; */\n    /* z-index: 100; */\n  }\n  hr {\n    border-width: 0.5px;\n    border-color: rgb(210, 210, 210);\n  }\n\n</style>\n"],"sourceRoot":"src/components"}]}
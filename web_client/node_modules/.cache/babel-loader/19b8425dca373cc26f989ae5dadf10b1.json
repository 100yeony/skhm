{"remainingRequest":"/home/skhm/web_client/node_modules/babel-loader/lib/index.js!/home/skhm/web_client/node_modules/eslint-loader/index.js??ref--13-0!/home/skhm/web_client/src/store.js","dependencies":[{"path":"/home/skhm/web_client/src/store.js","mtime":1563180614952},{"path":"/home/skhm/web_client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/skhm/web_client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _Object$assign from \"/home/skhm/web_client/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nimport { format, subDays } from 'date-fns'; // --------------------------------변수 선언 -------------------------------------------------------------------------------------------------\n\nvar addr = \"http://203.255.92.192/\";\nvar msg = {\n  timeout: 3000,\n  //3s\n  remove: \"정상적으로 삭제되었습니다.\",\n  insert: \"정상적으로 추가되었습니다.\",\n  update: \"정상적으로 변경되었습니다.\",\n  fail: \"비정상적인 응답입니다.\",\n  run: \"벤치마킹이 시작되었습니다.\"\n};\nvar defaultWL = {\n  \"w_name\": \"\",\n  \"propValues\": {\n    \"recordcount\": 1,\n    \"operationcount\": 1,\n    \"threadcount\": 1,\n    \"fieldcount\": 10,\n    \"fieldlength\": 100,\n    \"fieldnameprefix\": \"field\",\n    \"hdrhistogram.percentiles\": [95, 99],\n    \"insertcount\": 1,\n    \"insertorder\": \"hashed\",\n    \"insertproportion\": 0,\n    \"insertstart\": 0,\n    \"maxscanlength\": 1000,\n    \"minfieldlength\": 1,\n    \"minscanlength\": 1,\n    \"readallfields\": true,\n    \"readmodifywriteproportion\": 0,\n    \"readproportion\": 95,\n    \"requestdistribution\": \"uniform\",\n    \"scanlengthdistribution\": \"uniform\",\n    \"scanproportion\": 0,\n    \"updateproportion\": 5,\n    \"writeallfields\": false,\n    \"zeropadding\": 1,\n    \"datasize\": 100\n  }\n};\n\nvar dateFormat = function dateFormat(date) {\n  var createTime = new Date(date);\n  var year = createTime.getFullYear();\n  var month = (\"0\" + (createTime.getMonth() + 1)).slice(-2);\n  var day = (\"0\" + createTime.getDate()).slice(-2);\n  var hr = (\"0\" + createTime.getHours()).slice(-2);\n  var min = (\"0\" + createTime.getMinutes()).slice(-2);\n  var sec = (\"0\" + createTime.getSeconds()).slice(-2);\n  var totalDate = year + '-' + month + '-' + day + ' ' + hr + ':' + min + ':' + sec;\n\n  if (year == 1970) {\n    totalDate = null;\n  }\n\n  return totalDate;\n}; //벤치마킹 결과 페이지 - 총 소요시간 포맷\n\n\nvar timestampFormat = function timestampFormat(str, end) {\n  var strTime = new Date(str);\n  var endTime = new Date(end);\n  var diffTime = Math.abs(endTime.getTime() - strTime.getTime());\n  var d = Math.floor(diffTime / (1000 * 60 * 60 * 24));\n  diffTime -= d * (1000 * 60 * 60 * 24);\n  var h = Math.floor(diffTime / (1000 * 60 * 60));\n  diffTime -= h * (1000 * 60 * 60);\n  var m = Math.floor(diffTime / (1000 * 60));\n  diffTime -= m * (1000 * 60);\n  var s = Math.floor(diffTime / 1000); // diffTime -= h * (1000 * 60)\n\n  return d + '일 ' + h + '시간 ' + m + '분 ' + s + '초 '; // return m + '분 ' + s +'초 '\n}; //snackbar\n\n\nvar showSnack = function showSnack(msg, ctxt) {\n  ctxt.commit('showSnack', msg);\n}; //loading bar\n\n\nvar showLoading = function showLoading(ctxt) {\n  ctxt.commit('setIsLoading', true);\n};\n\nvar loadingCheck = function loadingCheck(ctxt) {\n  if (ctxt.state.isLoading) ctxt.commit('setIsLoading', false);\n}; //flag 'GET', 'POST'\n\n\nvar REQ = function REQ(url, flag, context, data) {\n  var errFunc = function errFunc(error) {\n    loadingCheck(context);\n    showSnack(msg.fail, context); // console.log(error)\n  };\n\n  showLoading(context);\n\n  if (flag === 'GET') {\n    return axios.get(addr + url, {\n      params: data\n    }).catch(errFunc);\n  } else {\n    return axios.post(addr + url, {\n      data: data\n    }).catch(errFunc);\n  }\n}; // --------------------------------/변수 선언 ---------------------------------------------------------------------------------------------\n\n\nexport var store = new Vuex.Store({\n  // --------------------------------state -------------------------------------------------------------------------------------------------\n  state: {\n    isLoading: false,\n    snack: {\n      isShow: false,\n      msg: \"\"\n    },\n    WLfiles: [],\n    //워크로드 전체(d_flag = 0, 1)\n    WLfilesFilter: [],\n    //삭제되지 않은 워크로드(d_flag = 0)\n    selectedWorkload: _Object$assign({}, defaultWL),\n    // clicked workload now\n    loadedWorkloads: [],\n    // loaded workload\n    insertWorkload: _Object$assign({}, defaultWL),\n    //for Dialog insert\n    DBfiles: [],\n    DBfilesConfigs: [],\n    //DBconfig파일\n    selectedDB: {},\n    benchmarks: [],\n    //벤치마킹 DB별 WL파일 매칭하여 저장\n    BMresultsOri: [],\n    //YCSB 결과 origin상태\n    BMresultsFilter: [],\n    //date, status flag를 필터링하는 것\n    BMresults: [],\n    //화면에 보여질 필터링한 최종 결과 파일, relation(n_id, w_ids의 상세 정보가 담겨있음)\n    WLpropMany: [],\n    //벤치마킹 정보보기 페이지에서 사용할 워크로드 별 propValues를 저장\n    ResultIO: [],\n    activeTab: null,\n    tabs: [{\n      id: 0,\n      title: '전체 결과',\n      canClose: false,\n      comp: 'BM_result',\n      isActive: true,\n      contents: [],\n      w_ids: []\n    }]\n  },\n  // --------------------------------/state -------------------------------------------------------------------------------------------------\n  // --------------------------------mutations -------------------------------------------------------------------------------------------------\n  mutations: {\n    //snackbar\n    closeSnack: function closeSnack(state) {\n      state.snack.isShow = false;\n    },\n    showSnack: function showSnack(state, message) {\n      state.snack = {\n        isShow: true,\n        msg: message,\n        timeout: msg.timeout\n      };\n    },\n    setIsLoading: function setIsLoading(state, payload) {\n      state.isLoading = payload;\n    },\n    // ---------------mutations 워크로드 설정 page---------------- //\n    setWLfiles: function setWLfiles(state, payload) {\n      state.WLfiles = payload;\n      state.WLfilesFilter = payload.filter(function (item) {\n        return item.w_d_flag == 0;\n      });\n    },\n    setIsActive: function setIsActive(state, payload) {\n      var wId = payload;\n      state.WLfiles.forEach(function (value) {\n        if (value.w_id === wId) value.isActive = true;else value.isActive = false;\n      });\n    },\n    //2. 클릭한 워크로드 파일의 w_id와 일치하는 값을 가져와 state 변경\n    setSelectedWorkload: function setSelectedWorkload(state, payload) {\n      if (typeof payload.w_id === 'undefined') state.selectedWorkload = _Object$assign({}, defaultWL);else state.selectedWorkload = payload;\n    },\n    setInsertWorkload: function setInsertWorkload(state) {\n      state.insertWorkload = _Object$assign({}, defaultWL);\n    },\n    addLoadedWorkloads: function addLoadedWorkloads(state, wl) {\n      state.selectedWorkload = wl;\n    },\n    addWorkload: function addWorkload(state, wl) {\n      state.WLfiles.push(wl);\n      state.WLfilesFilter.push(wl);\n    },\n    //워크로드 삭제\n    deleteWorkload: function deleteWorkload(state, wId) {\n      state.WLfiles.forEach(function (state, wId) {\n        if (state.w_id == wId) {\n          if (state.w_d_flag == 0) {\n            //삭제 안된 flag를\n            state.w_d_flag = 1; //삭제 flag로 변경\n\n            state.w_d_flagStr = 'Y';\n          }\n\n          return;\n        }\n      });\n      state.WLfilesFilter.forEach(function (item, idx) {\n        if (item.w_id == wId) {\n          state.WLfilesFilter.splice(idx, 1); //삭제flag로 바뀐 데이터 뺌\n\n          return;\n        }\n      });\n    },\n    updateWorkload: function updateWorkload(state, wId) {\n      //워크로드 설정 페이지의 워크로드 테이블에 보여지는 값 새로 업데이트\n      var temp = state.selectedWorkload;\n      state.WLfiles.forEach(function (item) {\n        if (item.w_id == wId) {\n          item.w_name = temp.w_name;\n          item.w_read = temp.propValues.readproportion;\n          item.w_update = temp.propValues.updateproportion;\n          item.w_insert = temp.propValues.insertproportion;\n          item.w_scan = temp.propValues.scanproportion;\n          item.w_readmodifywrite = temp.propValues.readmodifywriteproportion;\n          item.totalOperation = 'Read:' + item.w_read + '/' + ' Update:' + item.w_update + '/' + ' Insert:' + item.w_insert + '/' + ' Scan:' + item.w_scan + '/' + ' RMW:' + item.w_readmodifywrite;\n          return;\n        }\n      });\n    },\n    // ---------------/mutations 워크로드 설정 page---------------- //\n    // ---------------mutations DB 설정 page---------------- //\n    setDBfiles: function setDBfiles(state, DB) {\n      state.DBfiles = DB; // console.log(DB);\n\n      var nc_idTemp = [];\n      state.DBfiles.forEach(function (db) {\n        db.dbconfigs.forEach(function (x) {\n          nc_idTemp.push(x);\n        });\n      });\n      DB.forEach(function (db) {\n        db.dbconfigs.forEach(function (s) {\n          s.Dbconfigs = [];\n          s.Dbconfigs.push(nc_idTemp); //임시 변수를 이용해 데이터 넣음\n\n          s.Dbconfigs.forEach(function (g) {\n            state.DBfilesConfigs = g;\n          });\n        });\n      });\n    },\n    setSelectedDB: function setSelectedDB(state, payload) {\n      if (typeof payload.n_id === 'undefined') state.selectedDB = {};else state.selectedDB = payload;\n    },\n    setIsActiveDB: function setIsActiveDB(state, payload) {\n      var nId = payload;\n      state.DBfiles.forEach(function (value) {\n        if (value.n_id === nId) value.isActive = true;else value.isActive = false;\n      });\n    },\n    // ---------------/mutations DB 설정 page---------------- //\n    // ---------------/mutations DB 설정 page---------------- //\n    // ---------------mutations 벤치마크 실행 page---------------- //\n    setItems: function setItems(state, payload) {\n      state.benchmarks = payload; // console.log(state.benchmarks);\n    },\n    removeItem: function removeItem(state, payload) {\n      state.benchmarks[0].workloads.splice(payload, 1);\n    },\n    checkDBList: function checkDBList(state, payload) {\n      var id = payload.nc_id;\n      var config_name = payload.drg_name;\n      var containCheck = false;\n      state.benchmarks.forEach(function (item) {\n        if (item.nc_id === id) {\n          containCheck = true;\n          return;\n        }\n      });\n\n      if (!containCheck) {\n        state.benchmarks.push({\n          \"nc_id\": id,\n          \"drg_name\": config_name,\n          \"w_ids\": []\n        });\n      }\n\n      return state.benchmarks;\n    },\n    // ---------------/mutations 벤치마크 실행 page---------------- //\n    // ---------------mutations 벤치마킹 결과 page---------------- //\n    setWLpropMany: function setWLpropMany(state, payload) {\n      state.WLpropMany = payload; // console.log(state.WLpropMany);\n    },\n    setBMresults: function setBMresults(state, _benchmarks) {\n      //DBconfigs파일 정보 넣기 위해 임시 변수 생성\n      var nc_idTemp = [];\n      state.DBfiles.forEach(function (DB) {\n        DB.dbconfigs.forEach(function (x) {\n          nc_idTemp.push(x);\n        });\n      });\n\n      _benchmarks.forEach(function (bm) {\n        bm.relation.forEach(function (n) {\n          n.Dbconfigs = [];\n          n.Dbconfigs.push(nc_idTemp.find(function (x) {\n            return x.nc_id == n.nc_id;\n          })); //임시 변수를 이용해 데이터 넣음\n\n          n.Dbconfigs.forEach(function (s) {\n            s.specs.forEach(function (sp) {\n              if (sp.n_role == 0) {\n                sp.n_roleStr = 'Master';\n              } else {\n                sp.n_roleStr = 'Slave';\n              }\n            });\n          }); //워크로드 파일 정보와  propValues정보를 넣음\n\n          n.wlconfigs = [];\n          n.w_ids.forEach(function (w_id) {\n            n.wlconfigs.push(state.WLfiles.find(function (x) {\n              return x.w_id == w_id;\n            }));\n            n.wlconfigs[0].prop = {};\n            state.WLpropMany.forEach(function (x) {\n              if (x.w_id == w_id) {\n                n.wlconfigs[0].prop = x.propValues; //push함수는 배열에서만 사용하고 object에 데이터를 넣을 때는 = 으로\n              }\n            });\n          });\n        });\n      });\n\n      state.BMresultsOri = _benchmarks;\n      state.BMresultsFilter = _benchmarks;\n      state.BMresults = _benchmarks;\n    },\n    setResultIO: function setResultIO(state, _resultIO) {\n      state.ResultIO = _resultIO;\n    },\n    filterBMFlag: function filterBMFlag(state, payload) {\n      var temp = _Object$assign([], state.BMresultsFilter);\n\n      if (payload != 5) {\n        temp = temp.filter(function (item) {\n          return item.r_status_flag == payload;\n        });\n      }\n\n      state.BMresults = temp;\n    },\n    filterBMDate: function filterBMDate(state, payload) {\n      var temp = _Object$assign([], state.BMresultsOri);\n\n      var strDate = null;\n      var endDate = null;\n      if (payload[0] !== null) strDate = new Date(payload[0] + \" 00:00:00\");else strDate = subDays(new Date(), 9999);\n      if (payload[1] !== null) endDate = new Date(payload[1] + \" 24:00:00\");else endDate = new Date();\n      temp = temp.filter(function (item) {\n        var c = new Date(item.r_c_timestamp);\n        var s = new Date(item.r_s_timestamp);\n        var e = new Date(item.r_e_timestamp);\n        if (c >= strDate && c <= endDate) return true;\n        if (s >= strDate && s <= endDate) return true;\n        if (e >= strDate && e <= endDate) return true;\n      });\n      state.BMresultsFilter = temp;\n      state.BMresults = temp;\n    },\n    setActiveTab: function setActiveTab(state, id) {\n      // let id = payload\n      state.activeTab = id;\n      state.tabs.forEach(function (tab) {\n        if (tab.id !== id) {\n          tab.isActive = false;\n        } else {\n          tab.isActive = true;\n        }\n      });\n    },\n    addTab: function addTab(state, tab) {\n      state.tabs.push(tab);\n      state.activeTab = tab.id;\n    },\n    closeTab: function closeTab(state, id) {\n      //let index = state.tabs.indexOf(tab)\n      var idx = -1;\n      state.tabs.forEach(function (data, i) {\n        if (data.id == id) {\n          idx = i;\n          return;\n        }\n      });\n\n      if (idx !== -1) {\n        state.tabs.splice(idx, 1);\n        state.activeTab = 0;\n      }\n    }\n  },\n  // ---------------/mutations 벤치마킹 결과 page---------------- //\n  // --------------------------------/mutations -------------------------------------------------------------------------------------------------\n  // --------------------------------actions -------------------------------------------------------------------------------------------------\n  actions: {\n    // ---------------actions 워크로드 설정 page---------------- //\n    // WLfiles의 데이터를 서버에서 가져오는 부분. 1. 파일 모두 가져옴\n    getWLfiles: function getWLfiles(context) {\n      return REQ('getWorkloads', 'GET', context).then(function (response) {\n        response.data.forEach(function (value) {\n          value.w_c_timestamp = dateFormat(value.w_c_timestamp); //  = dateFormat(w_c_timestamp)\n\n          value.isActive = false; //벤치마크 실행page에서 워크로드 연산비율\n\n          value.totalOperation = 'Read:' + value.w_read + '/' + ' Update:' + value.w_update + '/' + ' Insert:' + value.w_insert + '/' + ' Scan:' + value.w_scan + '/' + ' RMW:' + value.w_readmodifywrite;\n          value.type = \"wl\"; //삭제 여부 0:삭제 안됨, 1: 삭제됨\n\n          if (value.w_d_flag == 0) {\n            value.w_d_flagStr = 'N';\n          } else {\n            value.w_d_flagStr = 'Y';\n          } // execute에서 사용할 w_name을 dra_name으로 정의\n\n\n          value.drg_name = value.w_name;\n        }); // console.log(response)\n\n        context.commit('setWLfiles', response.data);\n      }).then(loadingCheck(context));\n    },\n    //선택한 워크로드 파일의 상세정보 불러옴\n    getSelectedWorkload: function getSelectedWorkload(context, wId) {\n      //워크로드 설정 페이지에서 보내주는 w_id\n      return REQ('getWorkload', 'GET', context, {\n        w_id: wId\n      }).then(function (response) {\n        var temp = response.data.propValues['hdrhistogram.percentiles'];\n        if (typeof temp === 'string') temp = temp.split(',');else {\n          if (temp == 0) temp = [];else temp = [temp];\n        }\n        response.data.propValues['hdrhistogram.percentiles'] = temp;\n        response.data.w_c_timestamp = dateFormat(response.data.w_c_timestamp);\n        context.commit('setSelectedWorkload', response.data);\n        return response;\n      }).then(loadingCheck(context));\n    },\n    //워크로드 파일 삭제\n    deleteWorkload: function deleteWorkload(context, wId) {\n      REQ('deleteWorkload', 'GET', context, {\n        w_ids: wId\n      }).then(function (response) {\n        if (response.status == 204) {\n          if (context.state.selectedWorkload.w_id == wId) context.commit('setSelectedWorkload', {});\n          context.commit('deleteWorkload', wId);\n        }\n      }).then(function () {\n        loadingCheck(context);\n        showSnack(msg.remove, context);\n      });\n    },\n    //mdfy\n    //flag = 0 : insert\n    //flag = 1 : update\n    //flag = 2 : copy\n    modifyWorkload: function modifyWorkload(context, data) {\n      var tmpFlag = data.modifyFlag; //not copy\n\n      if (tmpFlag != 2) {\n        //copy제외\n        if (tmpFlag == 0) {\n          //insert\n          data = _Object$assign({}, context.state.insertWorkload);\n        } else {\n          //update\n          data = _Object$assign({}, context.state.selectedWorkload);\n        }\n\n        data.modifyFlag = tmpFlag;\n        if (data.propValues['hdrhistogram.percentiles'].length == 0) data.propValues['hdrhistogram.percentiles'] = 0;\n        data.propValues.workload = 'com.yahoo.ycsb.workloads.CoreWorkload';\n      }\n\n      return REQ('modifyWorkload', 'POST', context, data).then(function (response) {\n        if (response.status == 204) {\n          //update return\n          context.commit('updateWorkload', data.w_id);\n          showSnack(msg.update, context);\n        } else {\n          //insert, update, copy\n          if (tmpFlag == 1) {\n            //update\n            context.commit('deleteWorkload', data.w_id);\n          }\n\n          response.data[0].w_c_timestamp = dateFormat(response.data[0].w_c_timestamp);\n          response.data[0].isActive = false;\n          context.commit('addWorkload', response.data[0]);\n          showSnack(msg.insert, context);\n        }\n\n        return response;\n      }).then(loadingCheck(context));\n    },\n    // ---------------/actions 워크로드 설정 page------------------------------------------------------------\n    // ---------------actions DB 설정 page------------------------------------------------------------------\n    getDBs: function getDBs(context, data) {\n      return REQ('getDBs', 'GET', context).then(function (response) {\n        response.data.forEach(function (value) {\n          value.dbconfigs.forEach(function (dbconf) {\n            if (dbconf.n_d_flag == 0) {\n              dbconf.n_d_flagStr = 'N';\n            } else {\n              dbconf.n_d_flagStr = 'Y';\n            } // execute에서 사용할 nc_name을 drg_name으로 정의\n\n\n            dbconf.drg_name = dbconf.nc_name;\n          });\n        }); // console.log(response)\n\n        context.commit('setDBfiles', response.data);\n        return response;\n      }).then(loadingCheck(context));\n    },\n    getSelectedDB: function getSelectedDB(context, nId) {\n      //payload는 워크로드 설정 페이지에서 보내주는 w_id\n      return REQ('getDBs', 'GET', context, {\n        n_id: nId\n      }).then(function (response) {\n        // let temp = response.data.propValues['hdrhistogram.percentiles']\n        // if(typeof temp === 'string')\n        // temp = temp.split(',')\n        // else{\n        //   if(temp == 0) temp = []\n        //   else          temp = [temp]\n        context.commit('setSelectedDB', response.data);\n        return response;\n      }).then(loadingCheck(context));\n    },\n    // ---------------/actions DB 설정 page------------------------------------------------------------------\n    // ---------------actions 벤치마크 실행 page-------------------------------------------------------------------\n    // getBenchmarkData : (context, data) =>{\n    //   REQ('', 'GET', context)\n    //   .then( response =>{\n    //     // console.log(response)\n    //     context.commit('', response.data)\n    //     return response\n    //   }).then(loadingCheck(context))\n    // },\n    makeBenchmarks: function makeBenchmarks(context, data) {\n      var bs = context.state.benchmarks;\n      var nbm = [];\n\n      var _loop = function _loop(i) {\n        var b = {\n          \"nc_id\": bs[i].nc_id\n        };\n        nbm.push(b);\n        var temp = [];\n        bs[i].w_ids.forEach(function (w) {\n          return temp.push(w.w_id);\n        });\n        nbm[i].w_ids = temp;\n      };\n\n      for (var i = 0; i < bs.length; i++) {\n        _loop(i);\n      }\n\n      data.benchmarks = nbm;\n      REQ('executeBenchmark', 'POST', context, data).then(function (response) {\n        if (response.status == 204) {\n          showSnack(msg.run, context);\n        }\n\n        return response;\n      }).then(loadingCheck(context));\n    },\n    // ---------------actions 벤치마크 실행 page-------------------------------------------------------------------\n    // --------------- actions 벤치마킹 결과 page-------------------------------------------------------------\n    getBMresults: function getBMresults(context) {\n      REQ('getResults', 'GET', context).then(function (response) {\n        var wIds = [];\n        response.data.forEach(function (value) {\n          //결과에서 expand로 테이블 더 보여지는 부분\n          value.expanded = false;\n          value.relation.forEach(function (rel) {\n            rel.w_ids.forEach(function (w) {\n              //state.dispatch.getWLpropMany에 넘겨줄 워크로드 id\n              wIds.push(w);\n            });\n          }); //벤치마킹 수행 상태, 시간\n\n          switch (value.r_status_flag) {\n            case 0:\n              // ready\n              value.flagStr = '수행준비';\n              value.totalTimestamp = '';\n              break;\n\n            case 1:\n              value.flagStr = '수행 중';\n              value.totalTimestamp = '';\n              break;\n\n            case 2:\n              value.flagStr = '수행취소';\n              value.graph = 'error';\n              if (value.r_s_timestamp != null) value.totalTimestamp = timestampFormat(value.r_s_timestamp, value.r_e_timestamp);else value.totalTimestamp = timestampFormat(value.r_c_timestamp, value.r_e_timestamp);\n              break;\n\n            case 3:\n              value.flagStr = '수행완료';\n              value.graph = 'equalizer';\n              value.totalTimestamp = timestampFormat(value.r_s_timestamp, value.r_e_timestamp);\n              break;\n          }\n\n          value.r_c_timestamp = dateFormat(value.r_c_timestamp);\n          value.r_s_timestamp = dateFormat(value.r_s_timestamp);\n          value.r_e_timestamp = dateFormat(value.r_e_timestamp);\n        }); //r_id에 포함되는 DB, WL정보, WLpropValues 가져오는 부분. DB, WL, WLprop 모두 없는 경우\n\n        if (context.state.DBfiles.length === 0 && context.state.WLfiles.length === 0 && context.state.WLpropMany.length === 0) {\n          context.dispatch('getDBs').then(function (res) {\n            context.dispatch('getWLfiles').then(function (res2) {\n              context.dispatch('getWLpropMany', wIds).then(function (res3) {\n                context.commit('setBMresults', response.data);\n              });\n            });\n          }); //store.state.BMresults 에 DB정보 없을 경우\n        } else if (context.state.DBfiles.length === 0) {\n          context.dispatch('getDBs').then(function (res) {\n            context.dispatch('getWLpropMany', wIds).then(function (res2) {\n              context.commit('setBMresults', response.data);\n            });\n          }); //store.state.BMresults 에 WL정보 없을 경우\n        } else if (context.state.WLfiles.length === 0) {\n          context.dispatch('getWLfiles').then(function (res) {\n            context.dispatch('getWLpropMany', wIds).then(function (res2) {\n              context.commit('setBMresults', response.data);\n            });\n          }); //DB, WL정보 다 있는 경우\n        } else {\n          context.commit('setBMresults', response.data);\n        }\n      }).then(loadingCheck(context));\n    },\n    getResultIO: function getResultIO(context, rId) {\n      return REQ('getResultIO', 'GET', context, {\n        r_id: rId\n      }).then(function (response) {\n        // context.commit('setResultIO', response.data)\n        return response;\n      }).then(loadingCheck(context));\n    },\n    getResultIOraw: function getResultIOraw(context, payload) {\n      // console.log(payload);\n      var FileDownload = require('js-file-download');\n\n      REQ('getResultRAW', 'GET', context, {\n        \"r_id\": payload.r_id,\n        \"host\": payload.ip\n      }).then(function (response) {\n        // console.log(response);\n        return response.data;\n        FileDownload(response.data, 'RAW.json');\n      }).then(loadingCheck(context));\n    },\n    getWLpropMany: function getWLpropMany(context, wIds) {\n      // console.log(wIds);\n      return REQ('getWorkloadMany', 'GET', context, {\n        w_ids: wIds\n      }).then(function (response) {\n        //hdrhistogram.percentiles로 데이터가 오는데 template에서 바인딩시킬때 머스태쉬 문법에서 .을 읽을 수 없어서 명칭 변경\n        response.data.forEach(function (x) {\n          x.propValues.hdrhistogram_percentiles = x.propValues['hdrhistogram.percentiles'];\n        });\n        context.commit('setWLpropMany', response.data);\n      }).then(loadingCheck(context));\n    },\n    getTabContents: function getTabContents(context, data) {\n      if (data.type === 'graph') //벤치마킹 결과 graph\n        {\n          //#FIX ME: get Io result\n          REQ('getResultY', 'GET', context, {\n            \"r_id\": data.r_id\n          }).then(function (response) {\n            // console.log(response);\n            data.contents = {\n              \"YCSB\": response.data,\n              \"DBWL\": context.state.BMresults.find(function (x) {\n                return x.r_id == data.r_id;\n              })\n            };\n            context.commit('addTab', data);\n          });\n        } else if (data.type === 'detail') {\n        //상세정보\n        context.state.BMresults.forEach(function (bm) {\n          if (bm.r_id == data.r_id) {\n            data.contents = context.state.BMresults.find(function (x) {\n              return x.r_id == data.r_id;\n            });\n            context.commit('addTab', data);\n          }\n        });\n      } else {\n        //Error정보\n        REQ('getResultE', 'GET', context, {\n          \"r_id\": data.r_id\n        }).then(function (response) {\n          data.contents = {\n            \"Error\": response.data\n          };\n          context.commit('addTab', data);\n        }).then(loadingCheck(context));\n      }\n    } // --------------- /actions 벤치마킹 결과 page-------------------------------------------------------------\n    // --------------------------------/actions -------------------------------------------------------------------------------------------------\n\n  }\n});",{"version":3,"sources":["/home/skhm/web_client/src/store.js"],"names":["Vue","Vuex","axios","use","format","subDays","addr","msg","timeout","remove","insert","update","fail","run","defaultWL","dateFormat","date","createTime","Date","year","getFullYear","month","getMonth","slice","day","getDate","hr","getHours","min","getMinutes","sec","getSeconds","totalDate","timestampFormat","str","end","strTime","endTime","diffTime","Math","abs","getTime","d","floor","h","m","s","showSnack","ctxt","commit","showLoading","loadingCheck","state","isLoading","REQ","url","flag","context","data","errFunc","error","get","params","catch","post","store","Store","snack","isShow","WLfiles","WLfilesFilter","selectedWorkload","loadedWorkloads","insertWorkload","DBfiles","DBfilesConfigs","selectedDB","benchmarks","BMresultsOri","BMresultsFilter","BMresults","WLpropMany","ResultIO","activeTab","tabs","id","title","canClose","comp","isActive","contents","w_ids","mutations","closeSnack","message","setIsLoading","payload","setWLfiles","filter","item","w_d_flag","setIsActive","wId","forEach","value","w_id","setSelectedWorkload","setInsertWorkload","addLoadedWorkloads","wl","addWorkload","push","deleteWorkload","w_d_flagStr","idx","splice","updateWorkload","temp","w_name","w_read","propValues","readproportion","w_update","updateproportion","w_insert","insertproportion","w_scan","scanproportion","w_readmodifywrite","readmodifywriteproportion","totalOperation","setDBfiles","DB","nc_idTemp","db","dbconfigs","x","Dbconfigs","g","setSelectedDB","n_id","setIsActiveDB","nId","setItems","removeItem","workloads","checkDBList","nc_id","config_name","drg_name","containCheck","setWLpropMany","setBMresults","_benchmarks","bm","relation","n","find","specs","sp","n_role","n_roleStr","wlconfigs","prop","setResultIO","_resultIO","filterBMFlag","r_status_flag","filterBMDate","strDate","endDate","c","r_c_timestamp","r_s_timestamp","e","r_e_timestamp","setActiveTab","tab","addTab","closeTab","i","actions","getWLfiles","then","response","w_c_timestamp","type","getSelectedWorkload","split","status","modifyWorkload","tmpFlag","modifyFlag","length","workload","getDBs","dbconf","n_d_flag","n_d_flagStr","nc_name","getSelectedDB","makeBenchmarks","bs","nbm","b","w","getBMresults","wIds","expanded","rel","flagStr","totalTimestamp","graph","dispatch","res","res2","res3","getResultIO","rId","r_id","getResultIOraw","FileDownload","require","ip","getWLpropMany","hdrhistogram_percentiles","getTabContents"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nVue.use(Vuex);\nimport { format, subDays } from 'date-fns'\n// --------------------------------변수 선언 -------------------------------------------------------------------------------------------------\nconst addr = \"http://203.255.92.192/\"\nconst msg = {\n  timeout : 3000, //3s\n  remove : \"정상적으로 삭제되었습니다.\",\n  insert : \"정상적으로 추가되었습니다.\",\n  update : \"정상적으로 변경되었습니다.\",\n  fail   : \"비정상적인 응답입니다.\",\n  run    : \"벤치마킹이 시작되었습니다.\"\n}\nconst defaultWL =\n{  \"w_name\" : \"\",\n\"propValues\" :{\n  \"recordcount\" : 1,\n  \"operationcount\" : 1,\n  \"threadcount\" : 1,\n  \"fieldcount\": 10,\n  \"fieldlength\": 100,\n  \"fieldnameprefix\": \"field\",\n  \"hdrhistogram.percentiles\": [95,99],\n  \"insertcount\": 1,\n  \"insertorder\": \"hashed\",\n  \"insertproportion\": 0,\n  \"insertstart\": 0,\n  \"maxscanlength\": 1000,\n  \"minfieldlength\": 1,\n  \"minscanlength\": 1,\n  \"readallfields\": true,\n  \"readmodifywriteproportion\":0,\n  \"readproportion\": 95,\n  \"requestdistribution\": \"uniform\",\n  \"scanlengthdistribution\": \"uniform\",\n  \"scanproportion\": 0,\n  \"updateproportion\": 5,\n  \"writeallfields\": false,\n  \"zeropadding\":1,\n  \"datasize\": 100\n}\n}\n\nconst dateFormat = (date) => {\n  const createTime = new Date(date)\n  let year = createTime.getFullYear()\n  let month = (\"0\"+(createTime.getMonth()+1)).slice(-2)\n  let day = (\"0\" + createTime.getDate()).slice(-2)\n  let hr = (\"0\" + createTime.getHours()).slice(-2)\n  let min = (\"0\" + createTime.getMinutes()).slice(-2)\n  let sec = (\"0\" + createTime.getSeconds()).slice(-2)\n  let totalDate = year + '-' + month + '-' + day + ' ' + hr + ':' + min + ':' + sec\n  if(year == 1970) {\n    totalDate = null\n  } return totalDate\n}\n\n//벤치마킹 결과 페이지 - 총 소요시간 포맷\nconst timestampFormat = (str, end) => {\n  const strTime = new Date(str)\n  const endTime = new Date(end)\n  let diffTime = Math.abs(endTime.getTime() - strTime.getTime())\n\n  let d = Math.floor(diffTime / (1000 * 60 * 60 * 24))\n  diffTime -= d * (1000 * 60 * 60 * 24)\n\n  let h = Math.floor(diffTime / (1000 * 60 * 60))\n  diffTime -= h * (1000 * 60 * 60)\n\n  let m = Math.floor(diffTime / (1000 * 60))\n  diffTime -= m * (1000 * 60)\n\n  let s = Math.floor(diffTime / (1000 ))\n  // diffTime -= h * (1000 * 60)\n\n  return d + '일 ' + h + '시간 ' + m + '분 ' + s +'초 '\n  // return m + '분 ' + s +'초 '\n}\n\n\n//snackbar\nconst showSnack = (msg, ctxt) =>{\n  ctxt.commit('showSnack', msg)\n}\n\n//loading bar\nconst showLoading = ctxt =>{\n  ctxt.commit('setIsLoading', true)\n}\n\nconst loadingCheck = ctxt => {\n  if(ctxt.state.isLoading)\n  ctxt.commit('setIsLoading', false)\n}\n\n\n//flag 'GET', 'POST'\nconst REQ = (url, flag, context, data) => {\n  const errFunc = (error) =>{\n    loadingCheck(context)\n    showSnack(msg.fail, context)\n    // console.log(error)\n  }\n  showLoading(context)\n  if(flag === 'GET'){\n    return axios.get(addr+url, { params : data })\n    .catch( errFunc )\n  }else{\n    return axios.post(addr+url, { data })\n    .catch( errFunc )\n  }\n}\n\n\n// --------------------------------/변수 선언 ---------------------------------------------------------------------------------------------\n\n\n\nexport const store = new Vuex.Store({\n  // --------------------------------state -------------------------------------------------------------------------------------------------\n  state : {\n    isLoading : false,\n    snack : { isShow : false , msg : \"\"},\n    WLfiles : [],                                     //워크로드 전체(d_flag = 0, 1)\n    WLfilesFilter : [],                               //삭제되지 않은 워크로드(d_flag = 0)\n    selectedWorkload : Object.assign({},defaultWL),   // clicked workload now\n    loadedWorkloads : [],                             // loaded workload\n    insertWorkload :  Object.assign({},defaultWL),    //for Dialog insert\n    DBfiles : [],\n    DBfilesConfigs : [],                                     //DBconfig파일\n    selectedDB : {},\n    benchmarks : [],        //벤치마킹 DB별 WL파일 매칭하여 저장\n    BMresultsOri : [],      //YCSB 결과 origin상태\n    BMresultsFilter : [],   //date, status flag를 필터링하는 것\n    BMresults : [],         //화면에 보여질 필터링한 최종 결과 파일, relation(n_id, w_ids의 상세 정보가 담겨있음)\n    WLpropMany : [],        //벤치마킹 정보보기 페이지에서 사용할 워크로드 별 propValues를 저장\n    ResultIO : [],\n    activeTab : null,\n    tabs : [\n      {\n        id: 0,\n        title: '전체 결과',\n        canClose : false,\n        comp: 'BM_result',\n        isActive : true,\n        contents:[],\n        w_ids:[],\n      }\n    ],\n\n  },\n  // --------------------------------/state -------------------------------------------------------------------------------------------------\n\n\n\n  // --------------------------------mutations -------------------------------------------------------------------------------------------------\n  mutations : {\n    //snackbar\n    closeSnack : (state) =>{\n      state.snack.isShow = false\n    },\n    showSnack : (state, message) =>{\n      state.snack = {isShow : true, msg : message, timeout : msg.timeout }\n    },\n\n    setIsLoading : (state, payload) => {\n      state.isLoading = payload\n    },\n    // ---------------mutations 워크로드 설정 page---------------- //\n\n    setWLfiles : (state, payload) =>  {\n      state.WLfiles = payload\n      state.WLfilesFilter = payload.filter(item => item.w_d_flag == 0)\n\n    },\n\n\n    setIsActive : (state, payload) =>  {\n      const wId = payload\n      state.WLfiles.forEach(value => {\n        if (value.w_id === wId) value.isActive = true\n        else value.isActive = false\n      })\n    },\n    //2. 클릭한 워크로드 파일의 w_id와 일치하는 값을 가져와 state 변경\n    setSelectedWorkload : (state, payload) => {\n      if(typeof payload.w_id === 'undefined')\n      state.selectedWorkload = Object.assign({}, defaultWL)\n      else\n      state.selectedWorkload = payload\n    },\n\n    setInsertWorkload : (state) =>{\n      state.insertWorkload = Object.assign({},defaultWL)\n    },\n\n    addLoadedWorkloads : (state, wl) => {\n      state.selectedWorkload = wl\n    },\n\n    addWorkload : (state, wl) => {\n      state.WLfiles.push(wl)\n      state.WLfilesFilter.push(wl)\n\n    },\n\n    //워크로드 삭제\n    deleteWorkload: (state, wId) => {\n      state.WLfiles.forEach((state, wId) =>{\n        if(state.w_id == wId)\n        {\n          if(state.w_d_flag == 0) { //삭제 안된 flag를\n            state.w_d_flag = 1 //삭제 flag로 변경\n            state.w_d_flagStr = 'Y'\n          }\n          return\n        }\n      })\n      state.WLfilesFilter.forEach((item, idx) => {\n        if(item.w_id == wId)\n        {\n          state.WLfilesFilter.splice(idx, 1)  //삭제flag로 바뀐 데이터 뺌\n          return\n        }\n      })\n\n    },\n\n    updateWorkload : (state, wId) =>{\n      //워크로드 설정 페이지의 워크로드 테이블에 보여지는 값 새로 업데이트\n      let temp = state.selectedWorkload\n      state.WLfiles.forEach((item) =>{\n        if(item.w_id == wId)\n        {\n          item.w_name = temp.w_name\n          item.w_read = temp.propValues.readproportion\n          item.w_update = temp.propValues.updateproportion\n          item.w_insert = temp.propValues.insertproportion\n          item.w_scan = temp.propValues.scanproportion\n          item.w_readmodifywrite = temp.propValues.readmodifywriteproportion\n          item.totalOperation = 'Read:' + item.w_read + '/' + ' Update:'+item.w_update + '/' +\n          ' Insert:'+ item.w_insert + '/' + ' Scan:' + item.w_scan + '/' + ' RMW:' + item.w_readmodifywrite\n          return\n        }\n      })\n    },\n\n    // ---------------/mutations 워크로드 설정 page---------------- //\n\n\n\n    // ---------------mutations DB 설정 page---------------- //\n    setDBfiles : (state, DB) => {\n      state.DBfiles = DB\n      // console.log(DB);\n\n      let nc_idTemp = []\n      state.DBfiles.forEach(db=> {\n        db.dbconfigs.forEach(x=>{\n          nc_idTemp.push(x)\n        })\n      })\n\n      DB.forEach(db =>{\n        db.dbconfigs.forEach(s => {\n          s.Dbconfigs = []\n          s.Dbconfigs.push(nc_idTemp) //임시 변수를 이용해 데이터 넣음\n          s.Dbconfigs.forEach(g => {\n            state.DBfilesConfigs = g\n          })\n        })\n      })\n    },\n\n    setSelectedDB : (state, payload) => {\n      if(typeof payload.n_id === 'undefined')\n      state.selectedDB = {}\n      else\n      state.selectedDB = payload\n    },\n    setIsActiveDB : (state, payload) =>  {\n      const nId = payload\n      state.DBfiles.forEach(value => {\n        if (value.n_id === nId) value.isActive = true\n        else value.isActive = false\n      })\n    },\n    // ---------------/mutations DB 설정 page---------------- //\n\n    // ---------------/mutations DB 설정 page---------------- //\n\n\n\n    // ---------------mutations 벤치마크 실행 page---------------- //\n    setItems : (state, payload) => {\n      state.benchmarks = payload\n      // console.log(state.benchmarks);\n    },\n\n    removeItem : (state, payload) => {\n      state.benchmarks[0].workloads.splice(payload, 1)\n    },\n\n    checkDBList : function(state, payload){\n      let id = payload.nc_id\n      let config_name = payload.drg_name\n      let containCheck = false\n      state.benchmarks\n      .forEach((item)=> {\n        if(item.nc_id === id){\n          containCheck = true\n          return\n        }\n      })\n      if(!containCheck){\n        state.benchmarks.push({\"nc_id\" : id, \"drg_name\" : config_name, \"w_ids\" : []})\n      }\n      return state.benchmarks\n    },\n\n\n    // ---------------/mutations 벤치마크 실행 page---------------- //\n\n\n\n    // ---------------mutations 벤치마킹 결과 page---------------- //\n    setWLpropMany : (state, payload) =>  {\n      state.WLpropMany = payload\n      // console.log(state.WLpropMany);\n    },\n\n\n    setBMresults : (state, _benchmarks) =>  {\n      //DBconfigs파일 정보 넣기 위해 임시 변수 생성\n      let nc_idTemp = []\n      state.DBfiles.forEach(DB=> {\n        DB.dbconfigs.forEach(x=>{\n          nc_idTemp.push(x)\n        })\n      })\n      _benchmarks.forEach(bm =>{\n        bm.relation.forEach(n => {\n          n.Dbconfigs = []\n          n.Dbconfigs.push(nc_idTemp.find(x=> x.nc_id == n.nc_id)) //임시 변수를 이용해 데이터 넣음\n          n.Dbconfigs.forEach(s => {\n            s.specs.forEach(sp => {\n              if(sp.n_role == 0) {\n                sp.n_roleStr = 'Master'\n              }else {\n                sp.n_roleStr = 'Slave'\n              }\n            })\n          })\n          //워크로드 파일 정보와  propValues정보를 넣음\n          n.wlconfigs = []\n          n.w_ids.forEach(w_id =>{\n            n.wlconfigs.push(state.WLfiles.find( x => x.w_id == w_id))\n\n            n.wlconfigs[0].prop = {}\n            state.WLpropMany.forEach(x=>{\n              if(x.w_id == w_id){\n                n.wlconfigs[0].prop = x.propValues\n                //push함수는 배열에서만 사용하고 object에 데이터를 넣을 때는 = 으로\n              }\n            })\n          })\n        })\n      })\n      state.BMresultsOri = _benchmarks\n      state.BMresultsFilter = _benchmarks\n      state.BMresults = _benchmarks\n    },\n\n\n    setResultIO : (state, _resultIO) => {\n      state.ResultIO = _resultIO\n    },\n\n\n\n    filterBMFlag : (state, payload) =>{\n      let temp  = Object.assign([], state.BMresultsFilter)\n      if(payload != 5){\n        temp = temp.filter( item => item.r_status_flag == payload)\n      }\n      state.BMresults = temp\n    },\n\n    filterBMDate : (state, payload) =>{\n      let temp  = Object.assign([], state.BMresultsOri)\n      let strDate = null\n      let endDate = null\n      if(payload[0] !== null)\n      strDate = new Date(payload[0]+\" 00:00:00\")\n      else\n      strDate = subDays(new Date(), 9999)\n      if(payload[1] !== null)\n      endDate = new Date(payload[1]+\" 24:00:00\")\n      else\n      endDate = new Date()\n\n      temp = temp.filter(item => {\n        let c = new Date(item.r_c_timestamp)\n        let s = new Date(item.r_s_timestamp)\n        let e = new Date(item.r_e_timestamp)\n        if(c >= strDate && c <= endDate)\n        return true\n        if(s >= strDate && s <= endDate)\n        return true\n        if(e >= strDate && e <= endDate)\n        return true\n      })\n      state.BMresultsFilter = temp\n      state.BMresults = temp\n    },\n\n    setActiveTab: (state, id) =>{\n      // let id = payload\n      state.activeTab = id\n      state.tabs.forEach((tab) =>{\n        if (tab.id !== id) {\n          tab.isActive = false\n        }else{\n          tab.isActive = true\n        }\n      })\n    },\n\n    addTab : (state, tab) =>{\n      state.tabs.push(tab)\n      state.activeTab = tab.id\n    },\n\n\n    closeTab :  (state, id) =>{\n      //let index = state.tabs.indexOf(tab)\n      let idx = -1\n      state.tabs.forEach((data, i) => {\n        if( data.id == id) {\n          idx = i\n          return\n        }\n      })\n      if(idx !== -1){\n        state.tabs.splice(idx, 1)\n        state.activeTab = 0\n      }\n    },\n\n  },\n  // ---------------/mutations 벤치마킹 결과 page---------------- //\n\n  // --------------------------------/mutations -------------------------------------------------------------------------------------------------\n\n\n\n  // --------------------------------actions -------------------------------------------------------------------------------------------------\n  actions : {\n    // ---------------actions 워크로드 설정 page---------------- //\n\n    // WLfiles의 데이터를 서버에서 가져오는 부분. 1. 파일 모두 가져옴\n    getWLfiles: context => {\n      return REQ('getWorkloads', 'GET', context )\n      .then( response => {\n        response.data.forEach( (value) => {\n          value.w_c_timestamp = dateFormat(value.w_c_timestamp) //  = dateFormat(w_c_timestamp)\n          value.isActive = false\n          //벤치마크 실행page에서 워크로드 연산비율\n          value.totalOperation = 'Read:' + value.w_read + '/' + ' Update:'+value.w_update + '/' +\n          ' Insert:'+ value.w_insert + '/' + ' Scan:' + value.w_scan + '/' + ' RMW:' + value.w_readmodifywrite\n\n          value.type = \"wl\"\n\n          //삭제 여부 0:삭제 안됨, 1: 삭제됨\n          if(value.w_d_flag == 0) {\n            value.w_d_flagStr = 'N'\n          }else{\n            value.w_d_flagStr = 'Y'\n          }\n\n          // execute에서 사용할 w_name을 dra_name으로 정의\n          value.drg_name = value.w_name\n        })\n        // console.log(response)\n        context.commit('setWLfiles', response.data)\n      }).then(loadingCheck(context))\n\n    },\n\n    //선택한 워크로드 파일의 상세정보 불러옴\n    getSelectedWorkload : (context, wId) => { //워크로드 설정 페이지에서 보내주는 w_id\n      return REQ('getWorkload', 'GET', context, {w_id : wId})\n      .then( response => {\n        let temp = response.data.propValues['hdrhistogram.percentiles']\n        if(typeof temp === 'string')\n        temp = temp.split(',')\n        else{\n          if(temp == 0) temp = []\n          else          temp = [temp]\n        }\n        response.data.propValues['hdrhistogram.percentiles'] = temp\n        response.data.w_c_timestamp = dateFormat(response.data.w_c_timestamp)\n        context.commit('setSelectedWorkload', response.data)\n        return response\n      }).then(loadingCheck(context))\n    },\n\n    //워크로드 파일 삭제\n    deleteWorkload: (context, wId) =>  {\n      REQ('deleteWorkload', 'GET', context, {w_ids : wId})\n      .then(response =>{\n        if(response.status == 204){\n          if(context.state.selectedWorkload.w_id == wId)\n          context.commit('setSelectedWorkload', {})\n          context.commit('deleteWorkload', wId)\n        }\n      }).then(()=>{\n        loadingCheck(context)\n        showSnack(msg.remove, context)\n      })\n    },\n    //mdfy\n    //flag = 0 : insert\n    //flag = 1 : update\n    //flag = 2 : copy\n    modifyWorkload : (context, data) =>{\n      let tmpFlag = data.modifyFlag\n      //not copy\n      if(tmpFlag != 2){ //copy제외\n        if(tmpFlag == 0){  //insert\n          data = Object.assign({}, context.state.insertWorkload)\n        }else{   //update\n          data = Object.assign({}, context.state.selectedWorkload)\n        }\n        data.modifyFlag = tmpFlag\n\n        if(data.propValues['hdrhistogram.percentiles'].length == 0)\n        data.propValues['hdrhistogram.percentiles'] = 0\n        data.propValues.workload = 'com.yahoo.ycsb.workloads.CoreWorkload'\n      }\n\n      return REQ('modifyWorkload', 'POST', context, data)\n      .then( response => {\n        if(response.status == 204){ //update return\n          context.commit('updateWorkload', data.w_id)\n          showSnack(msg.update, context)\n        }\n        else{ //insert, update, copy\n\n          if(tmpFlag == 1){ //update\n            context.commit('deleteWorkload', data.w_id)\n          }\n\n          response.data[0].w_c_timestamp = dateFormat(response.data[0].w_c_timestamp)\n          response.data[0].isActive = false\n          context.commit('addWorkload', response.data[0])\n          showSnack(msg.insert, context)\n        }\n        return response\n      }).then(loadingCheck(context))\n    },\n    // ---------------/actions 워크로드 설정 page------------------------------------------------------------\n\n    // ---------------actions DB 설정 page------------------------------------------------------------------\n\n\n    getDBs : (context, data) =>{\n      return REQ('getDBs', 'GET', context)\n      .then( response =>{\n        response.data.forEach( (value) => {\n          value.dbconfigs.forEach( (dbconf) => {\n            if(dbconf.n_d_flag == 0) {\n              dbconf.n_d_flagStr = 'N'\n            }else {\n              dbconf.n_d_flagStr = 'Y'\n            }\n\n            // execute에서 사용할 nc_name을 drg_name으로 정의\n            dbconf.drg_name = dbconf.nc_name\n          })\n        })\n        // console.log(response)\n        context.commit('setDBfiles', response.data)\n        return response\n      }).then(loadingCheck(context))\n    },\n\n\n    getSelectedDB : (context, nId) => { //payload는 워크로드 설정 페이지에서 보내주는 w_id\n      return REQ('getDBs', 'GET', context, {n_id : nId})\n      .then( response => {\n        // let temp = response.data.propValues['hdrhistogram.percentiles']\n        // if(typeof temp === 'string')\n        // temp = temp.split(',')\n        // else{\n        //   if(temp == 0) temp = []\n        //   else          temp = [temp]\n        context.commit('setSelectedDB', response.data)\n        return response\n      }).then(loadingCheck(context))\n    },\n    // ---------------/actions DB 설정 page------------------------------------------------------------------\n\n\n\n\n\n    // ---------------actions 벤치마크 실행 page-------------------------------------------------------------------\n    // getBenchmarkData : (context, data) =>{\n    //   REQ('', 'GET', context)\n    //   .then( response =>{\n    //     // console.log(response)\n    //     context.commit('', response.data)\n    //     return response\n    //   }).then(loadingCheck(context))\n    // },\n\n\n    makeBenchmarks : (context, data) =>{\n      let bs = context.state.benchmarks\n      let nbm = []\n\n      for(let i =0; i<bs.length ; i++){\n        let b = {\"nc_id\" : bs[i].nc_id}\n        nbm.push(b)\n        let temp = []\n        bs[i].w_ids.forEach(w => temp.push(w.w_id))\n        nbm[i].w_ids = temp\n      }\n      data.benchmarks = nbm\n\n      REQ('executeBenchmark', 'POST', context, data)\n      .then( response =>{\n        if(response.status == 204){\n          showSnack(msg.run, context)\n        }\n        return response\n      }).then(loadingCheck(context))\n    },\n    // ---------------actions 벤치마크 실행 page-------------------------------------------------------------------\n\n\n\n\n    // --------------- actions 벤치마킹 결과 page-------------------------------------------------------------\n\n    getBMresults: context => {\n      REQ('getResults', 'GET', context )\n      .then( response => {\n        let wIds = []\n        response.data.forEach( (value) => {\n          //결과에서 expand로 테이블 더 보여지는 부분\n          value.expanded = false\n          value.relation.forEach(rel => {\n            rel.w_ids.forEach(w => {\n              //state.dispatch.getWLpropMany에 넘겨줄 워크로드 id\n              wIds.push(w)\n            })\n          })\n          //벤치마킹 수행 상태, 시간\n          switch (value.r_status_flag )\n          {\n            case 0 : // ready\n            value.flagStr = '수행준비'\n            value.totalTimestamp = ''\n            break;\n            case 1 :\n            value.flagStr = '수행 중'\n            value.totalTimestamp = ''\n            break;\n            case 2 :\n            value.flagStr  = '수행취소'\n            value.graph = 'error'\n            if(value.r_s_timestamp != null)\n            value.totalTimestamp = timestampFormat(value.r_s_timestamp, value.r_e_timestamp)\n            else\n            value.totalTimestamp = timestampFormat(value.r_c_timestamp, value.r_e_timestamp)\n            break;\n            case 3 :\n            value.flagStr  = '수행완료'\n            value.graph = 'equalizer'\n            value.totalTimestamp = timestampFormat(value.r_s_timestamp, value.r_e_timestamp)\n            break;\n          }\n          value.r_c_timestamp = dateFormat(value.r_c_timestamp)\n          value.r_s_timestamp = dateFormat(value.r_s_timestamp)\n          value.r_e_timestamp = dateFormat(value.r_e_timestamp)\n        })\n\n        //r_id에 포함되는 DB, WL정보, WLpropValues 가져오는 부분. DB, WL, WLprop 모두 없는 경우\n        if(context.state.DBfiles.length === 0 && context.state.WLfiles.length === 0 && context.state.WLpropMany.length === 0){\n          context.dispatch('getDBs').then((res) => {\n            context.dispatch('getWLfiles').then((res2) => {\n              context.dispatch('getWLpropMany', wIds).then((res3) => {\n                context.commit('setBMresults', response.data)\n              })\n            })\n          })\n          //store.state.BMresults 에 DB정보 없을 경우\n        }else if(context.state.DBfiles.length === 0){\n          context.dispatch('getDBs').then((res) => {\n            context.dispatch('getWLpropMany', wIds).then((res2) => {\n              context.commit('setBMresults', response.data)\n            })\n          })\n          //store.state.BMresults 에 WL정보 없을 경우\n        }else if(context.state.WLfiles.length === 0){\n          context.dispatch('getWLfiles').then((res)=>{\n            context.dispatch('getWLpropMany', wIds).then((res2)=>{\n              context.commit('setBMresults', response.data)\n            })\n          })\n          //DB, WL정보 다 있는 경우\n        }else{\n          context.commit('setBMresults', response.data)\n        }\n      }).then(loadingCheck(context))\n    },\n\n\n\n\n\n    getResultIO: (context, rId) => {\n      return REQ('getResultIO', 'GET', context, {r_id : rId} )\n      .then( response => {\n          // context.commit('setResultIO', response.data)\n          return response\n        }\n      ).then(loadingCheck(context))\n    },\n\n\n\n\n    getResultIOraw: (context, payload) => {\n      // console.log(payload);\n      const FileDownload = require('js-file-download')\n\n      REQ('getResultRAW', 'GET', context, {\"r_id\" : payload.r_id, \"host\" : payload.ip} )\n      .then( response => {\n        // console.log(response);\n          return response.data\n          FileDownload(response.data, 'RAW.json')\n        }\n      ).then(loadingCheck(context))\n    },\n\n\n\n\n    getWLpropMany : (context, wIds) => {\n      // console.log(wIds);\n      return REQ('getWorkloadMany', 'GET', context, {w_ids : wIds})\n      .then( response => {\n        //hdrhistogram.percentiles로 데이터가 오는데 template에서 바인딩시킬때 머스태쉬 문법에서 .을 읽을 수 없어서 명칭 변경\n          response.data.forEach(x => {\n            x.propValues.hdrhistogram_percentiles = x.propValues['hdrhistogram.percentiles']\n          })\n          context.commit('setWLpropMany', response.data)\n        }).then(loadingCheck(context))\n      },\n\n\n\n\n    getTabContents : (context, data) => {\n      if(data.type === 'graph')             //벤치마킹 결과 graph\n      {\n        //#FIX ME: get Io result\n        REQ('getResultY', 'GET', context, {\"r_id\" : data.r_id})\n        .then( response => {\n          // console.log(response);\n            data.contents = {\n              \"YCSB\" :  response.data,\n              \"DBWL\" : context.state.BMresults.find(x=>x.r_id == data.r_id)\n            }\n            context.commit('addTab', data)\n          })\n\n        }else if(data.type === 'detail'){    //상세정보\n          context.state.BMresults.forEach(bm =>  {\n            if(bm.r_id == data.r_id){\n              data.contents = context.state.BMresults.find(x=>x.r_id == data.r_id)\n              context.commit('addTab', data)\n            }\n          })\n        }\n        else{                               //Error정보\n            REQ('getResultE', 'GET', context, {\"r_id\" : data.r_id})\n            .then( response => {\n              data.contents = {\n                \"Error\" : response.data\n              }\n              context.commit('addTab', data)\n            }).then(loadingCheck(context))\n        }\n      },\n\n\n      // --------------- /actions 벤치마킹 결과 page-------------------------------------------------------------\n    }\n    // --------------------------------/actions -------------------------------------------------------------------------------------------------\n\n  });\n"]}]}
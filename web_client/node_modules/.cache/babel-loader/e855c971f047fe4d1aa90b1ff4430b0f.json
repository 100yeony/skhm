{"remainingRequest":"/home/skhm/web_client/client_test/node_modules/babel-loader/lib/index.js!/home/skhm/web_client/client_test/node_modules/vuetify-loader/lib/loader.js!/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/skhm/web_client/client_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/skhm/web_client/client_test/src/components/Graph.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/skhm/web_client/client_test/src/components/Graph.vue","mtime":1563180614951},{"path":"/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/vuetify-loader/lib/loader.js","mtime":1549812933000},{"path":"/home/skhm/web_client/client_test/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/skhm/web_client/client_test/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"/home/skhm/web_client/client_test/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Object$assign from \"/home/skhm/web_client/client_test/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport _Object$keys from \"/home/skhm/web_client/client_test/node_modules/@babel/runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { GChart } from 'vue-google-charts';\nexport default {\n  components: {\n    GChart: GChart\n  },\n  data: function data() {\n    return {\n      windowSize: {\n        x: 0,\n        y: 0\n      },\n      // url:'https://78.media.tumblr.com/tumblr_m39nv7PcCU1r326q7o1_500.png',\n      makeIOResult: [],\n      makeYCSBResult: [],\n      active_tab: null,\n      YCSBshow: false,\n      IOshow: false,\n      dbTemp: [],\n      //탭\n      DBinfo: [],\n      //탭\n      WLinfo: [],\n      //탭\n      // IOResult : [],\n      YChartData: [],\n      //밑에서 type들 넣어줌\n      YChartOptions: {\n        responsive: true,\n        title: 'YCSB Latency',\n        chartArea: {\n          left: 100,\n          top: 100,\n          bottom: 100,\n          right: 200,\n          width: '100%',\n          height: '100%'\n        },\n        height: 500,\n        hAxis: {\n          title: 'timewindow',\n          minValue: 0\n        },\n        //x축\n        vAxis: {\n          title: 'latency',\n          minValue: 0,\n          maxValue: 1000 //y축\n\n        }\n      },\n      YOverallTable: [],\n      //상세보기 - 총 latency 테이블에 바인딩\n      YOverallTableHeaders: [{\n        text: 'Type',\n        align: 'left',\n        sortable: false,\n        value: 'name',\n        width: '15%'\n      }, {\n        text: 'RunTime(ms)',\n        align: 'center',\n        sortable: false,\n        value: 'RunTime',\n        width: '15%'\n      }, {\n        text: 'Throughput(ops/sec)',\n        align: 'center',\n        sortable: false,\n        value: 'Throughput',\n        width: '20%'\n      }],\n      YTypeTable: [],\n      //상세보기 - 연산별 latency 테이블에 바인딩\n      YTypeTableHeaders: [{\n        text: 'Type',\n        align: 'left',\n        sortable: false,\n        value: 'name',\n        width: '15%'\n      }, {\n        text: 'Operations',\n        align: 'center',\n        sortable: false,\n        value: 'Operations',\n        width: '15%'\n      }, {\n        text: 'Average Latency(us)',\n        align: 'center',\n        sortable: false,\n        value: 'averageLatency',\n        width: '20%'\n      }, {\n        text: 'Min Latency(us)',\n        align: 'center',\n        sortable: false,\n        value: 'minLatency',\n        width: '12%'\n      }, {\n        text: 'Max Latency(us)',\n        align: 'center',\n        sortable: false,\n        value: 'maxLatency',\n        width: '13%'\n      }, {\n        text: '95%(us)',\n        align: 'center',\n        sortable: false,\n        value: 'latency95',\n        width: '10%'\n      }, {\n        text: '99%(us)',\n        align: 'center',\n        sortable: false,\n        value: 'latency99',\n        width: '10%'\n      }],\n      //--------------------------------------------------------------------------------------------------------------\n      IChartD: [],\n      IChartOptions: {\n        responsive: true,\n        title: 'IO Latency',\n        chartArea: {\n          left: 80,\n          top: 30,\n          bottom: 50,\n          right: 200,\n          width: '100%',\n          height: '100%'\n        },\n        height: 400,\n        hAxis: {},\n        //x축\n        vAxis: {},\n        //y축\n        seriesType: 'bars',\n        // series: {1: {type: 'line'}}\n        series: {\n          0: {\n            axis: 'IONumber'\n          },\n          1: {\n            axis: 'IOSize',\n            type: 'line'\n          }\n        },\n        axes: {\n          y: {\n            IONumber: {\n              label: 'IONumber'\n            },\n            IOSize: {\n              label: 'IOSize'\n            }\n          }\n        }\n      },\n      ILevelChartD: [],\n      ILevelChartOptions: {\n        responsive: true,\n        title: 'IO Level Latency',\n        chartArea: {\n          left: 80,\n          top: 30,\n          bottom: 50,\n          right: 200,\n          width: '100%',\n          height: '100%'\n        },\n        height: 400,\n        hAxis: {\n          title: 'time Window'\n        },\n        //x축\n        vAxis: {\n          title: 'latency',\n          minValue: 0\n        },\n        //y축\n        series: {\n          3: {\n            axis: 'max',\n            type: 'line'\n          },\n          4: {\n            axis: 'min',\n            type: 'line'\n          },\n          5: {\n            axis: 'var',\n            type: 'line'\n          },\n          6: {\n            axis: 'std',\n            type: 'line'\n          }\n        },\n        isStacked: true,\n        tooltip: {\n          pattern: 'scientific' // tooltip: { pattern: 'scientific', isHtml: true }\n\n        }\n      },\n      IdmduChartD: [],\n      IdmduChartOptions: {\n        responsive: true,\n        title: 'IO dmdu',\n        chartArea: {\n          left: 80,\n          top: 30,\n          bottom: 50,\n          right: 200,\n          width: '100%',\n          height: '100%'\n        },\n        height: 400,\n        hAxis: {\n          title: 'time Window'\n        },\n        //x축\n        vAxis: {\n          title: 'latency',\n          minValue: 0\n        },\n        //y축\n        isStacked: true,\n        tooltip: {\n          pattern: 'scientific' // tooltip: { pattern: 'scientific', isHtml: true }\n\n        }\n      },\n      ycsb: [],\n      tabinfo: [],\n      wlinfo: []\n    };\n  },\n  //data\n  props: ['contents'],\n  created: function created() {\n    var _this = this;\n\n    console.log(this.contents);\n    this.makeY_tabs();\n    this.tabinfo = this.contents.DBWL.relation;\n    this.tabinfo.forEach(function (x) {\n      _this.wlinfo = x.wlconfigs;\n    });\n    this.DBinfo = this.contents.DBWL.relation[0];\n    var default_nc_id = this.contents.DBWL.relation[0].nc_id;\n    this.makeY_tab_items(default_nc_id);\n    this.$store.dispatch('getResultIO', this.contents.DBWL.r_id).then(function (res) {\n      if (res.status == 200) {\n        _this.makeIOResult = res.data;\n\n        _this.makeIOGraph();\n      }\n    });\n  },\n  //created End\n  computed: {},\n  //computed End\n  mounted: function mounted() {\n    this.onResize();\n  },\n  methods: {\n    onResize: function onResize() {\n      this.windowSize = {\n        x: window.innerWidth,\n        y: window.innerHeight\n      };\n    },\n    makeY_tab_items: function makeY_tab_items(nc_id) {\n      var _this2 = this;\n\n      this.YOverallTable = [];\n      var ycsbTemp = [];\n      var startTime = new Date().getTime();\n      this.DBinfo = this.contents.DBWL.relation.find(function (nc) {\n        return nc.nc_id == nc_id;\n      }); // console.log(this.DBinfo);\n      // console.log(nc_id)\n      // console.log(dbwl.nc_id)\n\n      var dbwl = this.DBinfo;\n      dbwl.wlconfigs.forEach(function (wlconf) {\n        wlconf.nc_id = nc_id;\n\n        _this2.contents.YCSB.forEach(function (ycsssb) {\n          ycsbTemp.push(ycsssb);\n        });\n\n        wlconf.wlYCSB = ycsbTemp.find(function (what) {\n          return what.nc_id == wlconf.nc_id && what.w_id == wlconf.w_id;\n        });\n\n        _this2.YOverallTable.push({\n          type: wlconf.wlYCSB.ycsb[0].metric,\n          Runtime: wlconf.wlYCSB.ycsb[0].value,\n          Throughput: wlconf.wlYCSB.ycsb[1].value\n        });\n\n        wlconf.YOverallTable = _this2.YOverallTable;\n        var YChartTemp = [{\n          type: 'READ'\n        }, {\n          type: 'UPDATE'\n        }, {\n          type: 'CLEANUP'\n        }, {\n          type: 'SCAN'\n        }, {\n          type: 'INSERT'\n        }, {\n          type: 'INSERT-FAILED'\n        }, {\n          type: 'UPDATE-FAILED'\n        }, {\n          type: 'READ-FAILED'\n        }];\n        var YTypeTableTemp = [{\n          type: 'READ'\n        }, {\n          type: 'UPDATE'\n        }, {\n          type: 'CLEANUP'\n        }, {\n          type: 'SCAN'\n        }, {\n          type: 'INSERT'\n        }, {\n          type: 'INSERT-FAILED'\n        }, {\n          type: 'UPDATE-FAILED'\n        }, {\n          type: 'READ-FAILED'\n        }]; //YCSB chart 표현 시 x축 timewindow를 window size 단위로 잘라서 만들어야 함\n\n        var TWtemp = [];\n        var timewindow = [];\n        var temp1 = [];\n        var Types = [];\n        var TWmax = []; //content.measurement 중 max값\n        // let value = []\n\n        wlconf.wlYCSB.ycsb.forEach(function (content) {\n          var idx = -1;\n\n          switch (content.metric) {\n            case 'READ':\n              idx = 0;\n              break;\n\n            case 'UPDATE':\n              idx = 1;\n              break;\n\n            case 'CLEANUP':\n              idx = 2;\n              break;\n\n            case 'SCAN':\n              idx = 3;\n              break;\n\n            case 'INSERT':\n              idx = 4;\n              break;\n\n            case 'INSERT-FAILED':\n              idx = 5;\n              break;\n\n            case 'UPDATE-FAILED':\n              idx = 6;\n              break;\n\n            case 'READ-FAILED':\n              idx = 7;\n              break;\n          } //YChartData 만드는 부분 : isNaN 결과가 false면 content.measurement가 숫자\n          //timewindow만들기1\n\n\n          if (idx != -1) {\n            if (isNaN(Number(content.measurement)) == false) {\n              TWtemp.push(content.measurement); //max값 찾기\n\n              TWmax = Math.max.apply(null, TWtemp);\n              YChartTemp[idx][content['measurement']] = content.value;\n            } else {\n              YTypeTableTemp[idx][content['measurement']] = content.value;\n            }\n          }\n        }); //ycsb.forEach End\n        //YCSB Chart 필터링\n\n        YChartTemp = YChartTemp.filter(function (x) {\n          return _Object$keys(x).length !== 1 && x.type !== 'CLEANUP';\n        }); //TypeTable 필터링하여 완성\n\n        _this2.YTypeTable = YTypeTableTemp.filter(function (x) {\n          return typeof x.Operations !== 'undefined';\n        });\n        wlconf.YTypeTable = _this2.YTypeTable;\n        var windowsize = _this2.contents.DBWL.r_window_size * 1000; // console.log(windowsize);\n        //timewindow만들기2\n\n        for (var i = 0; i <= TWmax; i = i + windowsize) {\n          //TWtemp는 배열임. 배열에 i저장\n          TWtemp = i;\n          temp1[TWtemp] = 0; // timewindow.push(TWtemp)\n        } //type별로 timewindow만큼 키가 생기고 value가 없는 부분에 0으로 대치\n\n\n        YChartTemp.forEach(function (type) {\n          Types.push(_Object$assign([], temp1, type));\n        }); // console.log(Types);\n        // Types.forEach(x => {\n        //   let result = Object.keys(x).map(function(key) {\n        //     return [Number(key), x[key], x[key]]\n        //   })\n        //   this.YChartData = [['timewindow', x.type, x.type]] //'timewindow'는 화면에 나타나는 이름일 뿐임\n        //\n        //   wlconf.YChartData = this.YChartData.concat(result)\n        // })\n        // let idx = 0\n        // let keyArray = []\n\n        var result = _Object$keys(Types[0]).map(function (key) {\n          var a = [[Number(key)]];\n          var b = a.shift();\n          return b;\n        });\n\n        var test = [];\n        _this2.YChartData = [['timewindow']]; //'timewindow'는 화면에 나타나는 이름일 뿐임\n\n        Types.forEach(function (x) {\n          for (var _i = 0; _i < result.length; _i++) {\n            var a = x[_i * windowsize];\n\n            result[_i].push(a);\n          }\n\n          _this2.YChartData[0].push(x.type);\n        }); //Types forEach End\n\n        wlconf.YChartData = _this2.YChartData.concat(result); // console.log(wlconf.YChartData);\n      }); // wlconf End\n      // var endTime = new Date().getTime();\n      //\n      // console.log(endTime - startTime);\n    },\n    makeY_tabs: function makeY_tabs() {\n      this.contents.DBWL.relation.forEach(function (dbwl) {\n        dbwl.Dbconfigs.forEach(function (y) {\n          dbwl.nc_name = y.nc_name;\n          dbwl.n_version = y.n_version;\n        });\n      });\n    },\n    //makeY_tabs End\n    makeIOGraph: function makeIOGraph() {\n      var _this3 = this;\n\n      var trace;\n      var dmdu;\n      this.makeIOResult.forEach(function (x) {\n        trace = x.trace.records;\n        dmdu = x.dmdu.records; // console.log(this.contents.DBWL.r_c_timestamp);\n\n        var temp_trace = _toConsumableArray(trace);\n\n        var result = temp_trace.map(function (content) {\n          // console.log(content)\n          // const timetemp = new Date()\n          // let wtmin = timetemp.getSeconds(content['Window Time'])\n          // console.log(wtmin)\n          // let WTtemp = content['Window Time']\n          // let wtmin =\n          return [content['Window Time'], content['Number of IO'], content['Size of IO']];\n        });\n        _this3.IChartD = [['time', 'Number of IO', 'Size of IO']];\n        x.trace.IChartD = _this3.IChartD.concat(result);\n        temp_trace = _toConsumableArray(trace);\n        var result2 = temp_trace.map(function (content) {\n          return [content['Window Time'], content['Kernel Time'], content['Driver Time'], content['Device Time'], content['max'], content['min'], content['var'], content['std']];\n        });\n        _this3.ILevelChartD = [['time', '  Kernel', 'Driver', 'Device', 'max', 'min', 'var', 'std']];\n        x.trace.ILevelChartD = _this3.ILevelChartD.concat(result2);\n        var result3 = dmdu.map(function (content) {\n          return [Date(content['time']), content['delta_disk_usage'], content['waf'], content['gc'], content['nand_write']];\n        });\n        _this3.IdmduChartD = [['time', 'delta_disk_usage', 'waf', 'gc', 'nand_write']];\n        x.dmdu.IdmduChartD = _this3.IdmduChartD.concat(result3); // console.log(x)\n      });\n    },\n    //   forceFileDownload(response){\n    //     const url = window.URL.createObjectURL(new Blob([response.data]))\n    //     const link = document.createElement('a')\n    //     link.href = url\n    //     link.setAttribute('download', 'file.png') //or any other extension //txt파일로 줄것\n    //     document.body.appendChild(link)\n    //     link.click()\n    //   },\n    //\n    //   download() {\n    //     axios({\n    //     method: 'get',\n    //     url: this.url,\n    //     responseType: 'arraybuffer'\n    //   })\n    //   .then(response => {\n    //     this.forceFileDownload(response)\n    //   })\n    //   .catch(() => console.log('error occured'))\n    // },\n    download: function download(rid, ip) {\n      var payload = {\n        r_id: rid,\n        ip: ip\n      };\n      this.$store.dispatch('getResultIOraw', payload);\n    } //methods End\n\n  }\n};",{"version":3,"sources":["Graph.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"html\">\n\n  <v-container fluid>\n    <!-- 제일 바깥쪽 -->\n    <v-layout justify-center>\n      <v-flex xs12>\n        <v-card-title primary-title>\n          <h3 class=\"headline mb-0\"><b>벤치마킹 결과</b>&nbsp; &nbsp;{{this.contents.DBWL.r_name}}</h3>\n        </v-card-title>\n        <hr /> &nbsp;\n        <v-layout justify-center>\n          <!-- 제일 바깥쪽 -->\n          <v-flex xs11>\n            <!-- 제일 바깥쪽 -->\n            <v-card flat>\n              <!-- 제일 바깥쪽 -->\n\n              <v-card-title class=\"headline\"><b>YCSB Chart</b></v-card-title>\n              <v-tabs show-arrows\n                      :value=\"active_tab\"\n                      height=\"37\"\n                      slider-color=\"none\"\n                      color=\"white\">\n                <v-tab v-for=\"(rel, idx) in tabinfo\" :key=\"rel.nc_id\" @click=\"makeY_tab_items(rel.nc_id)\">\n                  {{rel.nc_name}} (Ver.{{rel.n_version}})\n                </v-tab>\n                <v-tab-item v-for=\"(rel, idx) in tabinfo\"\n                            :key=\"idx\"\n                            transition=\"slide-y-transition\"\n                            name=\"tab-fade\">\n\n                  <v-flex xs12 class=\"tabItemCard\">\n                    <v-card flat color=\"grey lighten-3\">\n                      <v-layout justify-center>\n                        <v-flex xs11 mt-3 mb-5>\n                          <v-tabs class=\"WLtab\"\n                                  :value=\"active_tab\"\n                                  height=\"37\"\n                                  slider-color=\"none\"\n                                  color=\"grey lighten-3\">\n                            <v-tab v-for=\"(relwl, idx) in wlinfo\" :key=\"relwl.w_id\">\n                              {{relwl.w_name}}\n                            </v-tab>\n                            <v-tab-item v-for=\"(relwl, idx) in wlinfo\"\n                                        :key=\"idx\"\n                                        transition=\"slide-y-transition\"\n                                        name=\"tab-fade\">\n                              <v-card flat color=\"white\">\n                                <v-layout row wrap justify-center>\n                                  <!--YCSB Latency Graph-->\n\n                                  <v-flex xs11 :v-bind=\"DBinfo\">\n                                    <v-card flat class=\"chart\">\n                                      <GChart type=\"LineChart\"\n                                              :data=\"relwl.YChartData\"\n                                              :options=\"YChartOptions\"\n                                              v-resize=\"onResize\" />\n                                      <v-layout justify-center row wrap>\n                                        <v-tooltip top>\n                                          <v-btn icon slot=\"activator\" @click=\"YCSBshow = !YCSBshow\">\n                                            <v-icon>{{ YCSBshow ? 'keyboard_arrow_up' : 'keyboard_arrow_down' }}</v-icon>\n                                          </v-btn>\n                                          <span>결과 상세보기</span>\n                                        </v-tooltip>\n                                      </v-layout>\n                                      <!-- 더보기 -->\n                                      <v-slide-y-transition>\n                                        <div class=\"v-card__text\" v-show=\"YCSBshow\">\n                                          <v-spacer></v-spacer>\n                                          <v-form>\n                                            <v-container py-0>\n                                              <v-layout row wrap justify-center>\n                                                <!--YCSB 성능 평가 결과-->\n                                                <v-flex xs12 sm12 md12 xl12 mb-4>\n                                                  <h5 class=\"headline mb-3\">YCSB 성능평가 상세 결과</h5>\n\n                                                  <!-- overall -->\n                                                  <v-flex xs11 ma-4>\n                                                    <v-toolbar flat dense color=\"rgb(232, 232, 233)\">\n                                                      <h2 class=\"title\">총 latency</h2>\n                                                    </v-toolbar>\n                                                    <v-data-table :headers=\"YOverallTableHeaders\"\n                                                                  :items=\"relwl.YOverallTable\"\n                                                                  class=\"elevation-1\"\n                                                                  hide-actions>\n                                                      <template v-slot:items=\"props\">\n                                                                                                        <tr >\n                                                                                                          <td class=\"text-xs-left\">{{ props.item.type }}</td>\n                                                                                                          <td class=\"text-xs-center\">{{ props.item.Runtime }}</td>\n                                                                                                          <td class=\"text-xs-center\">{{ props.item.Throughput }}</td>\n                                                                                                        </tr>\n                                                                                                        </template>\n                                                    </v-data-table>\n                                                  </v-flex>\n                                                  <!-- /overall -->\n\n                                                  <!-- 나머지 operation -->\n                                                  <v-flex xs11 ma-4>\n                                                    <v-toolbar flat dense color=\"rgb(232, 232, 233)\">\n                                                      <h2 class=\"title\">연산별 latency</h2>\n                                                    </v-toolbar>\n                                                    <v-data-table :headers=\"YTypeTableHeaders\"\n                                                                  :items=\"relwl.YTypeTable\"\n                                                                  class=\"elevation-1\"\n                                                                  hide-actions>\n                                                      <template v-slot:items=\"props\">\n                                                                                                        <tr :active=\"props.item.isActive\" :key=\"props.item.id\">\n                                                                                                          <td class=\"text-xs-left\">{{ props.item.type }}</td>\n                                                                                                          <td class=\"text-xs-center\">{{ props.item.Operations }}</td>\n                                                                                                          <td class=\"text-xs-center\">{{ props.item['AverageLatency(us)'] }}</td>\n                                                                                                          <td class=\"text-xs-center\">{{ props.item['MinLatency(us)'] }}</td>\n                                                                                                          <td class=\"text-xs-center\">{{ props.item['MaxLatency(us)'] }}</td>\n                                                                                                          <td class=\"text-xs-center\">{{ props.item['95thPercentileLatency(us)']}}</td>\n                                                                                                          <td class=\"text-xs-center\">{{ props.item['99thPercentileLatency(us)']}}</td>\n                                                                                                        </tr>\n                                                                                                      </template>\n                                                    </v-data-table>\n                                                  </v-flex>\n                                                  <!-- /나머지 operation -->\n\n                                                </v-flex>\n                                                <!--/YCSB 성능 평가 결과-->\n                                              </v-layout>\n                                            </v-container>\n                                          </v-form>\n                                        </div>\n                                      </v-slide-y-transition>\n                                      <!-- /더보기 -->\n\n                                    </v-card>\n                                  </v-flex>\n                                  <!--/YCSB Latency Graph-->\n\n                                </v-layout>\n                              </v-card>\n                            </v-tab-item>\n                            <!--workload tab item End-->\n\n                          </v-tabs>\n                          <!--workload tabs End-->\n                        </v-flex>\n                      </v-layout>\n                    </v-card>\n                  </v-flex>\n\n                </v-tab-item>\n              </v-tabs>\n              <!-- DB tabs End -->\n\n              &nbsp;\n              <v-card-title class=\"headline mt-1 mb-1\"><b>IO Chart</b></v-card-title>\n              <v-tabs show-arrows\n                      :value=\"active_tab\"\n                      height=\"37\"\n                      slider-color=\"none\"\n                      color=\"white\">\n                <v-tab v-for=\"(rel, idx) in makeIOResult\" :key=\"idx\">\n                  Node {{idx+1}} ({{rel.ip}})\n                </v-tab>\n                <v-tab-item v-for=\"(rel, idx) in makeIOResult\"\n                            :key=\"idx\"\n                            transition=\"slide-x-transition\"\n                            name=\"tab-fade\">\n\n                  <v-flex xs12 class=\"tabItemCard\">\n                    <v-card flat color=\"grey lighten-3\">\n                      <v-layout justify-center>\n                        <v-flex xs11 sm11 md11 xl11 mt-5 mb-5>\n                          <v-card flat color=\"white\">\n\n                            <v-layout row wrap justify-center>\n                              <v-flex xs11 ma-5>\n                                <v-card flat color=\"white\">\n                                  <v-flex mb-5>\n                                    <v-card flat color=\"white\" class=\"chart\">\n                                      <GChart type=\"ComboChart\"\n                                              :data=\"rel.trace.IChartD\"\n                                              :resizeDebounce=\"500\"\n                                              :options=\"IChartOptions\" />\n\n                                      <GChart type=\"AreaChart\"\n                                              :data=\"rel.trace.ILevelChartD\"\n                                              :options=\"ILevelChartOptions\" />\n\n                                      <GChart type=\"LineChart\"\n                                              :data=\"rel.dmdu.IdmduChartD\"\n                                              :options=\"IdmduChartOptions\" />\n                                    </v-card>\n                                  </v-flex>\n\n                                  <v-layout justify-center>\n                                    <v-tooltip top>\n                                      <v-btn color=\"grey\" slot=\"activator\" dark round @click=\"download(rid, rel.ip)\">\n                                        <v-icon>get_app</v-icon>download\n                                      </v-btn>\n                                      <span>Raw.json파일 다운</span>\n                                    </v-tooltip>\n                                  </v-layout>\n\n                                </v-card>\n                              </v-flex>\n                            </v-layout>\n\n                          </v-card>\n\n                        </v-flex>\n                      </v-layout>\n                    </v-card>\n                  </v-flex>\n\n                </v-tab-item>\n              </v-tabs>\n\n            </v-card>\n            <!-- 제일 바깥쪽 -->\n          </v-flex>\n          <!-- 제일 바깥쪽 -->\n        </v-layout>\n      </v-flex>\n\n    </v-layout>\n    <!-- 제일 바깥쪽 -->\n  </v-container>\n  <!-- 제일 바깥쪽 -->\n\n</template>\n\n<script>\n\n  import { GChart } from 'vue-google-charts'\n\n  export default {\n    components: {\n      GChart\n    },\n    data: () => ({\n      windowSize: {\n        x: 0,\n        y: 0\n      },\n      // url:'https://78.media.tumblr.com/tumblr_m39nv7PcCU1r326q7o1_500.png',\n      makeIOResult: [],\n      makeYCSBResult: [],\n      active_tab: null,\n      YCSBshow: false,\n      IOshow: false,\n      dbTemp: [], //탭\n      DBinfo: [], //탭\n      WLinfo: [], //탭\n      // IOResult : [],\n\n      YChartData: [], //밑에서 type들 넣어줌\n      YChartOptions: {\n        responsive: true,\n        title: 'YCSB Latency',\n        chartArea: { left: 100, top: 100, bottom: 100, right: 200, width: '100%', height: '100%' },\n        height: 500,\n        hAxis: { title: 'timewindow', minValue: 0 }, //x축\n        vAxis: { title: 'latency', minValue: 0, maxValue: 1000 } //y축\n      },\n\n      YOverallTable: [], //상세보기 - 총 latency 테이블에 바인딩\n      YOverallTableHeaders: [\n        { text: 'Type', align: 'left', sortable: false, value: 'name', width: '15%' },\n        { text: 'RunTime(ms)', align: 'center', sortable: false, value: 'RunTime', width: '15%' },\n        { text: 'Throughput(ops/sec)', align: 'center', sortable: false, value: 'Throughput', width: '20%' }\n      ],\n\n      YTypeTable: [], //상세보기 - 연산별 latency 테이블에 바인딩\n      YTypeTableHeaders: [\n        { text: 'Type', align: 'left', sortable: false, value: 'name', width: '15%' },\n        { text: 'Operations', align: 'center', sortable: false, value: 'Operations', width: '15%' },\n        { text: 'Average Latency(us)', align: 'center', sortable: false, value: 'averageLatency', width: '20%' },\n        { text: 'Min Latency(us)', align: 'center', sortable: false, value: 'minLatency', width: '12%' },\n        { text: 'Max Latency(us)', align: 'center', sortable: false, value: 'maxLatency', width: '13%' },\n        { text: '95%(us)', align: 'center', sortable: false, value: 'latency95', width: '10%' },\n        { text: '99%(us)', align: 'center', sortable: false, value: 'latency99', width: '10%' }\n      ],\n      //--------------------------------------------------------------------------------------------------------------\n      IChartD: [],\n      IChartOptions: {\n        responsive: true,\n        title: 'IO Latency',\n        chartArea: { left: 80, top: 30, bottom: 50, right: 200, width: '100%', height: '100%' },\n        height: 400,\n        hAxis: {}, //x축\n        vAxis: {}, //y축\n        seriesType: 'bars',\n        // series: {1: {type: 'line'}}\n        series: {\n          0: { axis: 'IONumber' },\n          1: { axis: 'IOSize', type: 'line' }\n        },\n        axes: {\n          y: {\n            IONumber: { label: 'IONumber' },\n            IOSize: { label: 'IOSize' }\n          }\n        }\n      },\n\n      ILevelChartD: [],\n      ILevelChartOptions: {\n        responsive: true,\n        title: 'IO Level Latency',\n        chartArea: { left: 80, top: 30, bottom: 50, right: 200, width: '100%', height: '100%' },\n        height: 400,\n        hAxis: { title: 'time Window' }, //x축\n        vAxis: { title: 'latency', minValue: 0 }, //y축\n        series: {\n          3: { axis: 'max', type: 'line' },\n          4: { axis: 'min', type: 'line' },\n          5: { axis: 'var', type: 'line' },\n          6: { axis: 'std', type: 'line' }\n        },\n        isStacked: true,\n        tooltip: { pattern: 'scientific' }\n        // tooltip: { pattern: 'scientific', isHtml: true }\n      },\n\n      IdmduChartD: [],\n      IdmduChartOptions: {\n        responsive: true,\n        title: 'IO dmdu',\n        chartArea: { left: 80, top: 30, bottom: 50, right: 200, width: '100%', height: '100%' },\n        height: 400,\n        hAxis: { title: 'time Window' }, //x축\n        vAxis: { title: 'latency', minValue: 0 }, //y축\n        isStacked: true,\n        tooltip: { pattern: 'scientific' }\n        // tooltip: { pattern: 'scientific', isHtml: true }\n      },\n      ycsb: [],\n      tabinfo: [],\n      wlinfo: []\n    }), //data\n    props: ['contents'],\n\n    created() {\n      console.log(this.contents)\n\n      this.makeY_tabs()\n      this.tabinfo = this.contents.DBWL.relation\n      this.tabinfo.forEach(x => {\n        this.wlinfo = x.wlconfigs\n      })\n\n      this.DBinfo = this.contents.DBWL.relation[0]\n      let default_nc_id = this.contents.DBWL.relation[0].nc_id\n      this.makeY_tab_items(default_nc_id)\n\n      this.$store.dispatch('getResultIO', this.contents.DBWL.r_id).then(res => {\n        if (res.status == 200) {\n          this.makeIOResult = res.data\n          this.makeIOGraph()\n        }\n      })\n    }, //created End\n\n    computed: {}, //computed End\n\n    mounted() {\n      this.onResize()\n    },\n\n    methods: {\n      onResize() {\n        this.windowSize = { x: window.innerWidth, y: window.innerHeight }\n      },\n\n      makeY_tab_items(nc_id) {\n        this.YOverallTable = []\n        let ycsbTemp = []\n        var startTime = new Date().getTime()\n        this.DBinfo = this.contents.DBWL.relation.find(nc => nc.nc_id == nc_id)\n\n        // console.log(this.DBinfo);\n\n        // console.log(nc_id)\n        // console.log(dbwl.nc_id)\n        let dbwl = this.DBinfo\n        dbwl.wlconfigs.forEach(wlconf => {\n          wlconf.nc_id = nc_id\n          this.contents.YCSB.forEach(ycsssb => {\n            ycsbTemp.push(ycsssb)\n          })\n\n          wlconf.wlYCSB = ycsbTemp.find(what => what.nc_id == wlconf.nc_id && what.w_id == wlconf.w_id)\n\n          this.YOverallTable.push({\n            type: wlconf.wlYCSB.ycsb[0].metric,\n            Runtime: wlconf.wlYCSB.ycsb[0].value,\n            Throughput: wlconf.wlYCSB.ycsb[1].value\n          })\n\n          wlconf.YOverallTable = this.YOverallTable\n\n          let YChartTemp = [\n            { type: 'READ' },\n            { type: 'UPDATE' },\n            { type: 'CLEANUP' },\n            { type: 'SCAN' },\n            { type: 'INSERT' },\n            { type: 'INSERT-FAILED' },\n            { type: 'UPDATE-FAILED' },\n            { type: 'READ-FAILED' }\n          ]\n\n          let YTypeTableTemp = [\n            { type: 'READ' },\n            { type: 'UPDATE' },\n            { type: 'CLEANUP' },\n            { type: 'SCAN' },\n            { type: 'INSERT' },\n            { type: 'INSERT-FAILED' },\n            { type: 'UPDATE-FAILED' },\n            { type: 'READ-FAILED' }\n          ]\n\n          //YCSB chart 표현 시 x축 timewindow를 window size 단위로 잘라서 만들어야 함\n\n          let TWtemp = []\n          let timewindow = []\n          let temp1 = []\n          let Types = []\n          let TWmax = [] //content.measurement 중 max값\n          // let value = []\n\n          wlconf.wlYCSB.ycsb.forEach(content => {\n            let idx = -1\n            switch (content.metric) {\n              case 'READ':\n                idx = 0\n                break\n              case 'UPDATE':\n                idx = 1\n                break\n              case 'CLEANUP':\n                idx = 2\n                break\n              case 'SCAN':\n                idx = 3\n                break\n              case 'INSERT':\n                idx = 4\n                break\n              case 'INSERT-FAILED':\n                idx = 5\n                break\n              case 'UPDATE-FAILED':\n                idx = 6\n                break\n              case 'READ-FAILED':\n                idx = 7\n                break\n            }\n\n            //YChartData 만드는 부분 : isNaN 결과가 false면 content.measurement가 숫자\n            //timewindow만들기1\n            if (idx != -1) {\n              if (isNaN(Number(content.measurement)) == false) {\n                TWtemp.push(content.measurement)\n                //max값 찾기\n                TWmax = Math.max.apply(null, TWtemp)\n                YChartTemp[idx][content['measurement']] = content.value\n              } else {\n                YTypeTableTemp[idx][content['measurement']] = content.value\n              }\n            }\n          }) //ycsb.forEach End\n\n          //YCSB Chart 필터링\n          YChartTemp = YChartTemp.filter(x => Object.keys(x).length !== 1 && x.type !== 'CLEANUP')\n          //TypeTable 필터링하여 완성\n          this.YTypeTable = YTypeTableTemp.filter(x => typeof x.Operations !== 'undefined')\n          wlconf.YTypeTable = this.YTypeTable\n\n          let windowsize = this.contents.DBWL.r_window_size * 1000\n          // console.log(windowsize);\n          //timewindow만들기2\n          for (var i = 0; i <= TWmax; i = i + windowsize) {\n            //TWtemp는 배열임. 배열에 i저장\n            TWtemp = i\n            temp1[TWtemp] = 0\n            // timewindow.push(TWtemp)\n          }\n          //type별로 timewindow만큼 키가 생기고 value가 없는 부분에 0으로 대치\n          YChartTemp.forEach(type => {\n            Types.push(Object.assign([], temp1, type))\n          })\n          // console.log(Types);\n\n          // Types.forEach(x => {\n          //   let result = Object.keys(x).map(function(key) {\n          //     return [Number(key), x[key], x[key]]\n          //   })\n          //   this.YChartData = [['timewindow', x.type, x.type]] //'timewindow'는 화면에 나타나는 이름일 뿐임\n          //\n          //   wlconf.YChartData = this.YChartData.concat(result)\n          // })\n\n          // let idx = 0\n          // let keyArray = []\n\n          let result = Object.keys(Types[0]).map(function(key) {\n            let a = [[Number(key)]]\n            let b = a.shift()\n            return b\n          })\n          let test = []\n\n          this.YChartData = [['timewindow']] //'timewindow'는 화면에 나타나는 이름일 뿐임\n          Types.forEach(x => {\n            for (let i = 0; i < result.length; i++) {\n              let a = x[i * windowsize]\n              result[i].push(a)\n            }\n\n            this.YChartData[0].push(x.type)\n          }) //Types forEach End\n          wlconf.YChartData = this.YChartData.concat(result)\n          // console.log(wlconf.YChartData);\n        }) // wlconf End\n        // var endTime = new Date().getTime();\n        //\n        // console.log(endTime - startTime);\n      },\n\n      makeY_tabs() {\n        this.contents.DBWL.relation.forEach(dbwl => {\n          dbwl.Dbconfigs.forEach(y => {\n            dbwl.nc_name = y.nc_name\n            dbwl.n_version = y.n_version\n          })\n        })\n      }, //makeY_tabs End\n\n      makeIOGraph() {\n        let trace\n        let dmdu\n\n        this.makeIOResult.forEach(x => {\n          trace = x.trace.records\n          dmdu = x.dmdu.records\n\n          // console.log(this.contents.DBWL.r_c_timestamp);\n\n          let temp_trace = [...trace]\n          let result = temp_trace.map(content => {\n            // console.log(content)\n            // const timetemp = new Date()\n            // let wtmin = timetemp.getSeconds(content['Window Time'])\n            // console.log(wtmin)\n\n            // let WTtemp = content['Window Time']\n            // let wtmin =\n\n            return [content['Window Time'], content['Number of IO'], content['Size of IO']]\n          })\n          this.IChartD = [['time', 'Number of IO', 'Size of IO']]\n          x.trace.IChartD = this.IChartD.concat(result)\n\n          temp_trace = [...trace]\n          let result2 = temp_trace.map(content => {\n            return [\n              content['Window Time'],\n              content['Kernel Time'],\n              content['Driver Time'],\n              content['Device Time'],\n              content['max'],\n              content['min'],\n              content['var'],\n              content['std']\n            ]\n          })\n          this.ILevelChartD = [['time', '  Kernel', 'Driver', 'Device', 'max', 'min', 'var', 'std']]\n          x.trace.ILevelChartD = this.ILevelChartD.concat(result2)\n\n          let result3 = dmdu.map(content => {\n            return [\n              Date(content['time']),\n              content['delta_disk_usage'],\n              content['waf'],\n              content['gc'],\n              content['nand_write']\n            ]\n          })\n          this.IdmduChartD = [['time', 'delta_disk_usage', 'waf', 'gc', 'nand_write']]\n          x.dmdu.IdmduChartD = this.IdmduChartD.concat(result3)\n\n          // console.log(x)\n        })\n      },\n\n      //   forceFileDownload(response){\n      //     const url = window.URL.createObjectURL(new Blob([response.data]))\n      //     const link = document.createElement('a')\n      //     link.href = url\n      //     link.setAttribute('download', 'file.png') //or any other extension //txt파일로 줄것\n      //     document.body.appendChild(link)\n      //     link.click()\n      //   },\n      //\n      //   download() {\n      //     axios({\n      //     method: 'get',\n      //     url: this.url,\n      //     responseType: 'arraybuffer'\n      //   })\n      //   .then(response => {\n      //     this.forceFileDownload(response)\n      //   })\n      //   .catch(() => console.log('error occured'))\n      // },\n\n      download: function(rid, ip) {\n        let payload = {\n          r_id: rid,\n          ip: ip\n        }\n        this.$store.dispatch('getResultIOraw', payload)\n      }\n    } //methods End\n  }\n\n</script>\n\n\n\n<style lang=\"css\" scoped>\n\n  .tabItemCard {\n    border-width: 1px;\n    border-style: solid;\n    border-color: rgb(210, 210, 210);\n    /* border-bottom-right-radius: 15px;\n                                          border-bottom-left-radius: 15px; */\n    /* border-top-right-radius: 15px; */\n    /* z-index: 100; */\n    background-color: rgb(237, 236, 236);\n  }\n\n  .tab-fade-enter-active {\n    transition: 0.001s ease;\n  }\n  .tab-fade-leave-active {\n    transition: 0.001s ease;\n  }\n\n  .tab-fade-enter,\n  .tab-fade-leave-to {\n    opacity: 0;\n  }\n  .chart {\n    width: 100%;\n    min-height: 450px;\n  }\n hr {\n   border-width: 0.5px;\n   border-color: rgb(210, 210, 210);\n }\n\n</style>\n"],"sourceRoot":"src/components"}]}